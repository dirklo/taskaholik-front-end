{"version":3,"sources":["reducers/auth.js","reducers/team.js","reducers/project.js","reducers/task.js","reducers/detail.js","reducers/index.js","store.js","helpers/helpers.js","actions/auth.js","components/auth/Logout.js","components/TopBar.js","components/cards/TaskCard.js","queries/taskComments.js","components/ErrorField.js","components/forms/NewCommentForm.js","components/cards/CommentCard.js","actions/detail.js","actions/task.js","components/forms/NewDetailForm.js","components/dashboard/DetailsList.js","components/dashboard/DetailsContainer.js","queries/detailComments.js","components/forms/UpdateDeadlineForm.js","queries/detailAssignees.js","components/dashboard/AssignmentsEditor.js","components/dashboard/DetailEditor.js","components/dashboard/TaskWorkspace.js","components/forms/NewTaskForm.js","actions/project.js","components/dashboard/TaskContainer.js","components/forms/NewProjectForm.js","actions/team.js","components/dashboard/TeamToolbar.js","components/dashboard/TaskToolbar.js","components/dashboard/MobileDashboard.js","components/pages/Dashboard.js","components/cards/MemberCard.js","components/forms/NewMemberForm.js","components/forms/ChangeTeamNameForm.js","components/pages/TeamPage.js","components/pages/NewTeamPage.js","components/cards/TeamCard.js","components/pages/TeamSelectPage.js","components/auth/Signup.js","components/LoadingSpinner.js","components/auth/withAuth.js","components/auth/loadData.js","components/auth/Login.js","components/pages/Landing.js","App.js","index.js"],"names":["initialState","authChecked","loggedIn","currentUser","teams","populated","projects","tasks","details","combineReducers","auth","user","state","action","type","payload","attribute","team","index","map","selected","newTeams","id","find","length","findIndex","name","slice","teamId","members","filter","member","memberId","splice","project","newProjects","task","taskComments","newTasks","newTask","Number","idx","detail","newDetails","completed","status","newDetail","detailAssignees","cleanDetails","taskId","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","currentTeam","store","getState","currentProject","currentTask","currentDetail","parseTimestamp","timestamp","date","Date","hours","getUTCHours","minutes","getUTCMinutes","ampm","toDateString","handleResponse","res","callback","ok","json","then","window","location","href","Promise","reject","message","baseUrl","setToken","token","localStorage","setItem","now","getTime","getToken","getItem","updateUserSelections","currentUserId","selectionObj","selected_team","selected_project","selected_task","selected_detail","dispatch","fetch","method","headers","Accept","Authorization","body","JSON","stringify","connect","logoutUser","errors","history","useHistory","onClick","push","username","useState","width","setWidth","useLayoutEffect","updateSize","innerWidth","addEventListener","removeEventListener","className","TaskCard","loadTask","e","title","fetchTaskComments","a","response","comments","createTaskComment","content","task_comment","task_id","comment","deleteTaskComment","commentId","ErrorField","this","props","timeout","timer","setInterval","clearError","parseInt","clearInterval","error","Component","commentType","addComment","setContent","setError","useEffect","onSubmit","preventDefault","value","onChange","target","deleteComment","removeDetailComment","author_id","data-id","dataset","created_at","author","setCurrentDetail","detailId","setCurrentTask","addDetail","deadline","creator_id","setDeadline","showForm","setShowForm","catch","handleSubmit","htmlFor","placeholder","showTimeSelect","dateFormat","deleteTask","currentDetails","leader_id","creator","useQuery","isLoading","data","refetch","remove","mutateAddComment","useMutation","onSuccess","mutate","mutateDeleteComment","fetchDetailComments","createDetailComment","detail_comment","detail_id","deleteDetailComment","updateDetail","param","showDeadlineSelect","setShowDeadlineSelect","required","fetchAssignees","addAssignee","userId","assignment","user_id","removeAssignee","assignees","showAddAssignee","setShowAddAssignee","selectedAssignee","setSelectedAssignee","mutateAddAssignee","mutateDeleteAssignee","memberOptions","label","assignee","includes","console","log","options","detailComments","completeDetail","deleteDetail","addTask","project_id","setTitle","setCurrentProject","projectId","deleteProject","currentTasks","addProject","projectName","team_id","showOverlay","setShowOverlay","populateTeams","preSelectId","setCurrentTeam","clearTeam","loadTeamData","teamData","removeMember","membership","email","removable","confirm","addMember","query","setQuery","updateTeam","teamName","setTeamName","to","leader","addTeam","TeamCard","selectTeam","handleSelectTeam","Signup","password","passwordConfirmation","emailFocus","usernameFocus","passwordFocus","passwordConfirmationFocus","handleChange","setState","handleFocus","focus","handleBlur","event","signupUser","redirect","passwordMatch","data-focus","onFocus","onBlur","showSignup","React","credentials","get","userJson","LoadingSpinner","withAuth","WrappedComponent","Wrapper","dispatchCheckAuth","loadData","teamsPopulated","Login","loginUser","mobileLogin","Landing","login","setLogin","setMobileLogin","url","data-name","xmlns","viewBox","preserveAspectRatio","d","opacity","alt","App","document","basename","process","exact","path","component","Dashboard","TeamPage","NewTeamPage","TeamSelectPage","Logout","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","getElementById"],"mappings":"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","file":"static/js/main.6781e2b8.chunk.js","sourcesContent":["const initialState = {\n  authChecked: false,\n  loggedIn: false,\n  currentUser: {}\n};\n\nexport default function authReducer(state = initialState, action) {\n  let user\n\n  switch (action.type) {\n    case 'AUTHENTICATED':\n      return {\n        authChecked: true,\n        loggedIn: true,\n        currentUser: action.payload\n      };\n    case 'NOT_AUTHENTICATED':\n      return {\n        authChecked: true,\n        loggedIn: false,\n        currentUser: {}\n      };\n    case 'SET_USER_SELECTED':\n      user = state.currentUser\n      for (const attribute in action.payload) {\n        user[attribute] = action.payload[attribute]\n      }\n      \n      return {\n        ...state,\n        currentUser: user\n      }\n    default:\n      return state;\n  }\n}","const initialState = {\n    teams: [],\n    populated: false \n}\n\nexport default function teamReducer(state = initialState, action) {\n    let team;\n    let index;\n\n    switch (action.type) {\n        case \"POPULATE_TEAMS\":\n            let teams = action.payload\n            teams.map(team => team.selected = false)\n            return {\n                ...state,\n                teams: [...action.payload],\n            }\n        case \"SET_CURRENT_TEAM\":\n            let newTeams = state.teams.map(team => {\n                if (team.id === action.payload) {\n                    return {...team, selected: true}\n                } else {\n                    return {...team, selected: false}\n                }\n            })\n            if (!newTeams.find(team => team.selected === true) && newTeams.length > 0) {\n                newTeams[0].selected = true\n            }\n            return {\n                ...state,\n                teams: newTeams,\n                populated: true\n        }\n        case \"ADD_TEAM\":\n            team = action.payload\n            team.selected = true\n\n            return {\n                ...state,\n                teams: [...state.teams, team]\n            }\n        case \"UPDATE_TEAM\":\n            index = state.teams.findIndex(team => team.id = action.payload.id)\n            team = state.teams[index]\n            team.name = action.payload.name\n            return {\n                ...state, \n                teams: [\n                    ...state.teams.slice(0, index),\n                    team,\n                    ...state.teams.slice(index + 1)\n                ]\n            }\n        case \"REMOVE_MEMBER\":\n            index = state.teams.findIndex(team => team.id === action.payload.teamId)\n            team = state.teams[index]\n            team.members = team.members.filter(member => action.payload.memberId !== member.id)\n\n            return {\n                ...state, \n                teams: [\n                    ...state.teams.splice(0, index), \n                    team, \n                    ...state.teams.splice(index + 1)\n                ]\n            }\n        case \"ADD_MEMBER\":\n            index = state.teams.findIndex(team => team.id === action.payload.teamId)\n            team = state.teams[index]\n            team.members = [...team.members, action.payload.member]\n\n            return {\n                ...state, \n                teams: [\n                    ...state.teams.splice(0, index), \n                    team, \n                    ...state.teams.splice(index + 1)\n                ]\n            }\n        case \"CLEAR_TEAMS\":\n            return {\n                ...state,\n                teams: [],\n                populated: false\n            }\n        default:\n            return state\n    }\n}","const initialState = {\n    projects: []\n};\n  \nexport default function projectReducer(state = initialState, action) {\n    let newProjects\n\n    switch (action.type) {\n        case \"POPULATE_PROJECTS\":\n            return {\n                ...state,\n                projects: [...action.payload]\n            }\n        case \"SET_CURRENT_PROJECT\":\n            newProjects = state.projects.map(project => {\n                if (project.id === action.payload) {\n                    project.selected = true\n                    return project\n                } else {\n                    project.selected = false\n                    return project\n                }\n            })\n            return {\n                ...state,\n                projects: newProjects\n            }\n        case \"ADD_PROJECT\":\n            return {\n                ...state, \n                projects: [...state.projects, action.payload]\n            }\n        case \"DELETE_PROJECT\":\n            newProjects = state.projects.filter(project => \n                project.id !== action.payload\n            )\n            return {\n                ...state, \n                projects: [...newProjects]\n            }\n        case \"CLEAR_PROJECTS\":\n            return {\n                ...state,\n                projects: []\n            }\n      default:\n        return state;\n    }\n}","const initialState = {\n    tasks: []\n  };\n  \n  export default function taskReducer(state = initialState, action) {\n    let index;\n\n    switch (action.type) {\n        case \"POPULATE_TASKS\":\n            return {\n                ...state,\n                tasks: [...action.payload]\n            }\n        case \"POPULATE_TASK_COMMENTS\":\n            return {\n                ...state,\n                taskComments: [...action.payload]\n            }\n        case \"SET_CURRENT_TASK\":\n            let newTasks = state.tasks.map(task => {\n                if (task.id === action.payload) {\n                    return {...task, selected: true}\n                } else {\n                    return {...task, selected: false}\n                }\n            })\n            return {\n                ...state,\n                tasks: newTasks\n            }\n        case \"ADD_TASK\":\n            let newTask = action.payload\n            newTask.selected = true\n            return {\n                ...state,\n                tasks: [\n                    ...state.tasks.map(task => {\n                        task.selected = false\n                        return task\n                    }), \n                    newTask\n                ]\n            }\n        case \"DELETE_TASK\":\n            index = state.tasks.findIndex(task => task.id === Number(action.payload))\n            return {\n                ...state,\n                tasks: [...state.tasks.filter((task, idx) => idx !== index)]\n            }\n        case \"CLEAR_TASKS\":\n            return {\n                ...state,\n                tasks: []\n            }\n      default:\n        return state;\n    }\n  }","const initialState = {\n    details: []\n};\n\n  \nexport default function detailReducer(state = initialState, action) {\n    let index;\n    let detail;\n    \n    switch (action.type) {\n        case \"SET_CURRENT_DETAIL\":\n            let newDetails = state.details.map(detail => {\n                if (detail.id === Number(action.payload)) {\n                    return {...detail, selected: true}\n                } else {\n                    return {...detail, selected: false}\n                }\n            })\n            return {\n                ...state,\n                details: newDetails\n            }\n        case \"POPULATE_DETAILS\":\n            return {\n                ...state,\n                details: [...action.payload]\n            }\n        case \"COMPLETE_DETAIL\":\n            index = state.details.findIndex(detail => detail.id === action.payload.detail.id)\n            detail = state.details[index]\n\n            detail.completed = !action.payload.status\n\n            return {\n                ...state,\n                details: [\n                    ...state.details.slice(0, index), \n                    detail, \n                    ...state.details.slice(index + 1)\n                ]\n            }\n        case \"ADD_DETAIL\":\n            let newDetail = action.payload\n            newDetail.selected = true\n            return {\n                ...state,\n                details: [\n                    ...state.details.map(detail => {\n                        detail.selected = false\n                        return detail\n                    }), \n                    newDetail\n                ]\n            }\n        case \"UPDATE_DETAIL\":\n            index = state.details.findIndex(detail => detail.id = action.payload.id) \n            return {\n                ...state, \n                details: [\n                    ...state.details.slice(0, index),\n                    action.payload,\n                    ...state.details.slice(index + 1)\n                ]\n            }\n        case \"DELETE_DETAIL\":\n            return {\n                ...state,\n                details: [...state.details.filter(detail => detail.id !== action.payload)]\n            }\n        case \"CLEAR_DETAILS\":\n            return {\n                ...state,\n                details: [],\n                detailAssignees: []\n            }\n        case \"TASK_CLEANUP\":\n            let cleanDetails = state.details\n            return {\n                ...state,\n                details: [...cleanDetails.filter(detail => detail.taskId !== action.payload)]\n            }\n        default:\n            return state;\n    }\n}","// src/reducers/index.js\nimport { combineReducers } from 'redux'\nimport authReducer from './auth'\nimport teamReducer from './team'\nimport projectReducer from './project'\nimport taskReducer from './task'\nimport detailReducer from './detail'\n\nexport default combineReducers({\n  auth: authReducer,\n  team: teamReducer,\n  project: projectReducer,\n  task: taskReducer,\n  detail: detailReducer,\n})","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)","import store from '../store'\n\nexport function currentTeam() {\n    return store.getState().team.teams.find(team => team.selected === true)\n}\n\nexport function currentProject() {\n    return store.getState().project.projects.find(project => project.selected === true)\n}\n\nexport function currentTask() {\n    return store.getState().task.tasks.find(task => task.selected === true)\n}\n\nexport function currentDetail() {\n    return store.getState().detail.details.find(detail => detail.selected === true)\n}\n\nexport function parseTimestamp(timestamp) {\n    const date = new Date(timestamp)\n    let hours = date.getUTCHours()%12\n    hours = hours === 0 ? 12 : hours\n    const minutes = ('0' + date.getUTCMinutes()).slice(-2)\n    const ampm = date.getUTCHours() > 12 ? 'PM' : 'AM'\n    return date.toDateString() + ', ' + hours + ':' + minutes + ' ' + ampm\n}\n\nexport const handleResponse = (res, callback) => {\n    if (res.ok) {\n        return res.json().then(json => callback(json))\n    } else {\n        if (res.status === 401) {window.location.href = '/'}\n        return res.json().then(json => Promise.reject(json.message))\n    }\n} \n\nexport const baseUrl = 'https://taskaholik-back-end.herokuapp.com'\n// export const baseUrl = 'http://localhost:3001'","import { baseUrl, currentTeam, currentProject, currentTask, currentDetail } from '../helpers/helpers' \n\nconst setToken = (token) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"lastLoginTime\", new Date(Date.now()).getTime());\n};\n\nexport const getToken = () => {\n  const now = new Date(Date.now()).getTime();\n  const thirtyMinutes = 1000 * 60 * 30;\n  const timeSinceLastLogin = now - localStorage.getItem(\"lastLoginTime\");\n  if (timeSinceLastLogin < thirtyMinutes) {\n    return localStorage.getItem(\"token\");\n  }\n};\n\nexport const signupUser = (credentials) => {\n    return (dispatch) => {\n      return fetch(`${baseUrl}/signup`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ user: credentials })\n      }).then((res) => {\n        if (res.ok) {\n          setToken(res.headers.get(\"Authorization\"));\n          return res\n            .json()\n            .then((userJson) =>\n              dispatch({ type: 'AUTHENTICATED', payload: userJson })\n            );\n        } else {\n          return res.json().then((errors) => {\n            dispatch({ type: 'NOT_AUTHENTICATED' });\n            return Promise.reject(errors.status.message);\n          });\n        }\n      });\n    };\n};\n\nexport const loginUser = (credentials) => {\n    return async (dispatch) => {\n        return fetch(`${baseUrl}/login`, {\n          method: \"POST\",\n          headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ user: credentials }),\n        })\n        .then((res) => {\n          if (res.ok) {\n            setToken(res.headers.get(\"Authorization\"));\n            return res.json()\n            .then((userJson) => {\n              dispatch({ type: 'AUTHENTICATED', payload: userJson.data })\n              return userJson\n            })\n          } else {\n            return res.json()\n            .then((errors) => {\n              dispatch({ type: 'NOT_AUTHENTICATED' });\n              return Promise.reject(errors.error);\n            });\n          }\n        });\n    };\n};\n  \nexport const logoutUser = () => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/logout`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        },\n        }).then((res) => {\n        if (res.ok) {\n            dispatch({type: 'CLEAR_DETAILS'})\n            dispatch({type: 'CLEAR_TASKS'})\n            dispatch({type: 'CLEAR_PROJECTS'})\n            dispatch({type: 'CLEAR_TEAMS'})\n            return dispatch({ type: 'NOT_AUTHENTICATED' });\n\n        } else {\n            return res.json().then((errors) => {\n            dispatch({ type: 'NOT_AUTHENTICATED' });\n            return Promise.reject(errors);\n            });\n        }\n        });\n    };\n};\n\nexport const checkAuth = () => {\n    return (dispatch) => {\n      return fetch(`${baseUrl}/current_user`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: getToken()\n        }\n      }).then((res) => {\n        if (res.ok) {\n          return res.json().then(user => dispatch({type: 'AUTHENTICATED', payload: user}))\n        } else {\n          return Promise.reject(dispatch({type: 'NOT_AUTHENTICATED'}))\n        }\n      });\n    };\n  };\n\nexport const updateUserSelections = (currentUserId) => {\n  const selectionObj = {\n    selected_team: currentTeam() ? currentTeam().id : null,\n    selected_project: currentProject() ? currentProject().id : null,\n    selected_task: currentTask() ? currentTask().id : null,\n    selected_detail: currentDetail() ? currentDetail().id : null\n  }\n  \n  return (dispatch) => {\n    dispatch({type: 'SET_USER_SELECTED', payload: selectionObj})\n    return fetch(`${baseUrl}/users/${currentUserId}/set_selected`, {\n      method: 'PATCH',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: getToken()\n      },\n      body: JSON.stringify(\n         selectionObj\n      )\n    }).then((res) => {\n      return res\n    });\n  };\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Logout = ({ logoutUser }) => {\n  const history = useHistory();\n  \n  const handleClick = () => {\n    logoutUser()\n    .then(() => history.push(\"/\"));\n  };\n\n  return (\n    <button onClick={handleClick}>\n      Logout\n    </button>\n  );\n};\n\nexport default connect(null, { logoutUser })(Logout);","import React, {useState, useLayoutEffect} from 'react'\nimport { connect } from 'react-redux'\nimport './TopBar.css'\nimport Logout from '../components/auth/Logout'\n\nfunction TopBar({ username }) {\n    const [width, setWidth] = useState(0)\n\n    useLayoutEffect(() => {\n        function updateSize() {\n          setWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    return (\n        <div className='top-bar'>\n            <div className=\"logo\"></div>\n            { width > 480 ?\n                <h3>askaholik</h3>\n            : null\n            }\n            <h2>\n                Welcome back, {username}\n            </h2>\n            <Logout />\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        username: state.auth.currentUser.username\n    }\n})(TopBar)\n\n\n","import React from 'react'\nimport './TaskCard.css'\n\nexport default function TaskCard({ task, loadTask }) {\n    return (\n        <div\n            className={task.selected ? 'task-card selected' : 'task-card'}\n            id={task.id} \n            onClick={(e) => {\n                loadTask(e);\n            }}>\n            <h2>{task.title}</h2>\n\n        </div>\n    )\n}\n\n","import { baseUrl, currentTask, handleResponse } from '../helpers/helpers'\nimport { getToken } from '../actions/auth'\n\nexport async function fetchTaskComments() {\n    const response = await fetch(`${baseUrl}/task_comments?taskId=${currentTask().id}`, {\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        }\n    })\n    const comments = await handleResponse(response, (json) => json)\n    return comments\n}\n\nexport async function createTaskComment(content) {\n    const response = await fetch(`${baseUrl}/task_comments`, {\n        method: 'POST',\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        },\n        body: JSON.stringify({ task_comment: {\n            task_id: currentTask().id,\n            content: content\n        }})\n    })\n    const comment = await handleResponse(response, (json) => json)\n    return comment\n}\n\nexport async function deleteTaskComment(commentId) {\n    const response = await fetch(`${baseUrl}/task_comments/${commentId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        }\n    })\n    const comment = await handleResponse(response, (json) => json)\n    return comment\n}","import React, { Component } from 'react'\nimport './ErrorField.css'\n\nexport default class ErrorField extends Component {\n    \n    componentDidMount() {\n        if (this.props.timeout) {\n            this.timer = setInterval(\n                this.props.clearError,\n                parseInt(this.props.timeout)\n            )\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer)\n    }\n\n    render() {\n        return (\n            <div className=\"error-field\">\n                <p>{this.props.error}</p>\n                <button \n                    className=\"dismiss\"\n                    onClick={() => {\n                        this.props.clearError()\n                        clearInterval(this.timer)\n                    }}\n                >\n                    X\n                </button>\n            </div>\n        )\n    } \n}\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './NewCommentForm.css'\nimport ErrorField from '../ErrorField'\n\nfunction NewCommentForm({ commentType, addComment, tasks }) {\n    const [content, setContent] = useState('')\n    const [error, setError] = useState('')\n\n    useEffect(() => setError(''), [tasks])\n\n    return (\n        <div className='new-comment-form'>\n            <form \n                onSubmit={(e) => {\n                    e.preventDefault()\n                    addComment(content)\n                    setContent('')\n                }}\n            >\n                <input \n                    type='text'\n                    name='content' \n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                >\n                </input>\n                <input\n                    className={commentType=== \"task\" ? 'comment-submit task' : 'comment-submit detail' }\n                    type='submit' \n                    value=\"Post Comment\"/>\n                <br/>\n            </form>\n            { error ?\n                <ErrorField \n                    error={error}\n                    timeout='5000'\n                    clearError={() => setError('')}\n                /> : null\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        currentUser: state.auth.currentUser,\n        tasks: state.task.tasks,\n        details: state.detail.details\n    }\n})(NewCommentForm)\n\n\n","import React from 'react'\nimport './CommentCard.css'\nimport { connect } from 'react-redux'\nimport { parseTimestamp } from '../../helpers/helpers'\nimport Delete from '@material-ui/icons/Delete'\nimport ChatBubble from '@material-ui/icons/ChatBubble'\n\nfunction CommentCard({ comment, currentUser, commentType, deleteComment, removeDetailComment }) {\n\n    return (\n        <div className=\"comment-card\">\n            <div key={comment.id} className={commentType === 'task' ? 'comment-body task' : 'comment-body detail'}>\n                    {currentUser.id === comment.author_id ?\n                        <div \n                            className='delete-btn'\n                            data-id={comment.id}\n                            onClick={(e) => deleteComment(e.target.dataset.id)}\n                        >\n                            <Delete className='delete-icon' />\n                        </div>\n                    :\n                        null\n                    }\n                <span className='comment-content'>{comment.content}</span>\n                <span className='timestamp'>{parseTimestamp(comment.created_at)}</span>\n            </div>\n            <div className=\"author-div\">\n                <ChatBubble/>\n                <span>{comment.author.username}</span>\n            </div>\n        </div>\n    )\n\n}\n\nexport default connect((state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n},)(CommentCard)\n","import { baseUrl, handleResponse } from '../helpers/helpers' \nimport { getToken } from './auth'\n\nexport const setCurrentDetail = (detailId) => {\n    return (dispatch) => {\n        dispatch({type: \"SET_CURRENT_DETAIL\", payload: detailId})\n    }\n}\n\nexport const completeDetail = (detail) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details/${detail.id}/complete`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: getToken()\n            },\n            body: JSON.stringify({status: detail.completed})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({\n                    type: 'COMPLETE_DETAIL', \n                    payload: {detail: detail, status: detail.completed}\n                })\n            })\n        })\n    }\n}\n\nexport const addDetail = (content, currentTask, currentUser, deadline) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details`, {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({\n                content: content, \n                task_id: currentTask.id, \n                creator_id: currentUser.id,\n                deadline: deadline\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({ type: \"ADD_DETAIL\", payload: json.detail})\n                dispatch({ type: \"SET_CURRENT_DETAIL\", payload: json.detail.id })\n                dispatch({\n                    type: \"SET_USER_SELECTED\", \n                    payload: {\n                        'selected_detail': json.detail.id\n                    }\n                })\n            })\n        })\n    }\n}\n\nexport const deleteDetail = (detailId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details/${detailId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            }\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'DELETE_DETAIL', payload: detailId})\n                dispatch({type: 'SET_USER_SELECTED', payload: {selected_detail: null}})\n            })\n        })\n    }\n}\n\n\n\n\nexport const updateDetail = (detailId, param) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details/${detailId}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({detail: param})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'UPDATE_DETAIL', payload: json.detail})\n                dispatch({type: 'SET_CURRENT_DETAIL', payload: json.detail})\n            })\n        })\n    }\n}\n\n\n","import { baseUrl, handleResponse } from '../helpers/helpers'\nimport { getToken } from './auth'       \n\nexport const setCurrentTask = (taskId) => {\n    return (dispatch) => {\n        dispatch({type: \"SET_CURRENT_TASK\", payload: taskId})\n    }\n}\n\nexport const addTask = (title, currentProject, creator) => {\n    return (dispatch) => {\n        fetch(`${baseUrl}/tasks`, {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({\n                title: title, \n                project_id: currentProject.id, \n                creator_id: creator.id\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({ type: \"ADD_TASK\", payload: json.task})\n                dispatch({ type: \"SET_CURRENT_TASK\", payload: json.task.id })\n                dispatch({\n                    type: \"SET_USER_SELECTED\", \n                    payload: {\n                        'selected_task': json.task.id,\n                        'selected_detail': null\n                    }\n                })\n            })\n        })\n    }\n}\n\nexport const deleteTask = (taskId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/tasks/${taskId}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: getToken()\n            }\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'DELETE_TASK', payload: taskId})\n                dispatch({type: 'TASK_CLEANUP', payload: taskId})\n            })\n        })\n    }\n}\n\n","import React, { useState } from 'react'\nimport './NewDetailForm.css'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { connect } from 'react-redux'\nimport { addDetail } from '../../actions/detail'\nimport { currentTask } from '../../helpers/helpers'\nimport { updateUserSelections } from '../../actions/auth'\nimport ErrorField from '../ErrorField'\nimport Close from '@material-ui/icons/Close'\nimport DatePicker from 'react-datepicker'\n\nfunction NewDetailForm({ currentUser, addDetail, updateUserSelections }) {\n\n    const [content, setContent] = useState('')\n    const [deadline, setDeadline] = useState(null)\n    const [showForm, setShowForm] = useState(false)\n    const [error, setError] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!error) {\n            setShowForm(false)\n            setContent('')\n        }\n        addDetail(content, currentTask(), currentUser, deadline)\n        .catch((error) => {setError(error)})\n        updateUserSelections(currentUser.id)\n    }\n    return (\n        <div className=\"new-detail-form\">\n            { error ?\n                <ErrorField \n                    error={error}\n                    timeout='5000'\n                    clearError={() => setError('')}\n                />\n                : null\n            }\n            { showForm ? \n                <> \n                    <button \n                        type='button'\n                        className=\"cancel-btn\"\n                        onClick={(e) => {\n                            setShowForm(false)\n                            setContent('')\n                            setDeadline('')\n                        }}\n                    >\n                        <Close />\n                    </button>\n                    <form\n                        onSubmit={(e) => handleSubmit(e)}\n                    >\n                        <label htmlFor=\"add-detail\">\n                            Description:\n                        </label>\n                        <br/>\n                        <input \n                            type=\"text\"\n                            id=\"add-detail\"\n                            value={content}\n                            placeholder='Description'\n                            onChange={(e) => setContent(e.target.value)}\n                            />\n                        <br/>\n                        <label htmlFor=\"deadline\"> Deadline:</label>\n                        <br/>\n                        <DatePicker \n                            selected={deadline}\n                            onChange={date => setDeadline(date)}\n                            showTimeSelect\n                            dateFormat=\"Pp\"\n                        />\n                        <br/>\n                        <br/>\n                        <input type=\"submit\" value=\"Add Detail\"/>\n                    </form>\n                </>\n            :\n                <button \n                    className='show-form-btn'\n                    onClick={(e) => setShowForm(true)}\n                >\n                    + Add New Detail\n                </button>\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n       currentUser: state.auth.currentUser\n    }\n}, { addDetail, updateUserSelections } )(NewDetailForm)\n\n\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './DetailsList.css'\nimport { setCurrentDetail } from '../../actions/detail'\nimport { deleteTask } from '../../actions/task'\nimport { currentTask, currentTeam } from '../../helpers/helpers'\nimport { updateUserSelections } from '../../actions/auth'\nimport ErrorField from '../ErrorField'\nimport NewDetailForm from '../forms/NewDetailForm'\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\n\n\nfunction DetailsList({ details, setCurrentDetail, deleteTask, tasks, currentUser, updateUserSelections }) { \n    \n    const [error, setError] = useState('')\n\n    const currentDetails = [...details.filter(detail => detail.task_id === currentTask().id)]\n    \n    useEffect(() => {\n        setError('')\n    }, [tasks])\n    \n    const handleDeleteTask = (e) => {\n        deleteTask(currentTask().id)\n        .catch(error => {\n            setError(error)\n        })\n    }\n    if (currentTask()) {\n        return (\n            <section className='details-list'>\n                <div className=\"detail-header\">\n                    <h2>{currentTask().title}</h2>\n                    {currentUser.id === currentTeam().leader_id ||\n                        currentUser === currentTask.creator ?\n                            <button\n                            className='delete-task-btn'\n                            onClick={(e) => handleDeleteTask(e)}    \n                            >\n                                <DeleteOutline/>\n                            </button>\n                        : null\n                    }\n                </div>\n                {error !== '' ? \n                    <ErrorField \n                    error={error}\n                        timeout='5000'\n                        clearError={() => setError('')} \n                        /> : null\n                }\n                <NewDetailForm />\n                {currentDetails.map(detail =>\n                    <div \n                    className={detail.selected? 'detail-card selected' : 'detail-card'}\n                    key={detail.id}\n                    data-id={detail.id}\n                    onClick={e => {\n                            setCurrentDetail(Number(e.target.dataset.id))\n                            updateUserSelections(currentUser.id)\n                        }}\n                        >\n                        <span \n                            key={detail.id}\n                            className={detail.completed? 'checkmark completed' : 'checkmark'}\n                            data-id={detail.id}\n                            >\n                            {detail.completed ? <CheckCircle /> : <CheckCircleOutline />}\n                        </span>\n                        <span className=\"detail-body\">\n                            {detail.content}\n                        </span>\n                    </div> \n                )}\n            </section>\n        ) \n    } else {\n        return null\n    }\n}\n\nexport default connect((state) => {\n    return {\n        tasks: state.task.tasks,\n        comments: state.task.taskComments,\n        details: state.detail.details,\n        currentUser: state.auth.currentUser\n    }\n}, { setCurrentDetail, deleteTask, updateUserSelections })(DetailsList)\n\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './DetailsContainer.css'\nimport { useQuery, useMutation } from 'react-query'\nimport { fetchTaskComments, createTaskComment, deleteTaskComment } from '../../queries/taskComments'\nimport NewCommentForm from '../forms/NewCommentForm'\nimport CommentCard from '../cards/CommentCard'\nimport DetailsList from './DetailsList'\n\nfunction DetailsColumn({ tasks }) {\n\n    const { isLoading, error, data: comments, refetch, remove } = useQuery(\"taskComments\", fetchTaskComments)\n\n    const { mutate: mutateAddComment } = useMutation(createTaskComment, {\n        onSuccess: () => {\n            refetch()\n        }\n    })\n\n    const { mutate: mutateDeleteComment } = useMutation(deleteTaskComment, {\n        onSuccess: () => {\n            refetch()\n        }\n    })\n\n    useEffect(() => {\n        remove()\n        refetch()\n    }, [tasks, refetch, remove])\n    \n    if (error) return \"An Error Occured: \" + error.message\n\n    return (\n        <section className='details-container'>\n            <DetailsList />\n            <br/>\n            <br/>\n            <section className='task-comments'>\n                <NewCommentForm \n                    commentType='task' \n                    addComment={(comment) => mutateAddComment(comment)}\n                    />\n                <div className='comment-container'>\n                    {!isLoading && comments ?\n                        comments.map(comment =>\n                            <CommentCard \n                            key={comment.id} \n                            comment={comment} \n                            commentType=\"task\" \n                            deleteComment={(comment) => mutateDeleteComment(comment)} \n                            />\n                        )\n                        : \"LOADING...\"\n                    }\n                </div>\n            </section>\n        </section>\n    ) \n}\n\nexport default connect((state) => {\n    return {\n        comments: state.task.taskComments,\n        tasks: state.task.tasks\n    }\n})(DetailsColumn)\n\n\n","import { baseUrl, currentDetail, handleResponse } from '../helpers/helpers'\nimport { getToken } from '../actions/auth'\n\n\nexport async function fetchDetailComments() {\n    const response = await fetch(`${baseUrl}/detail_comments?detail_id=${currentDetail().id}`, {\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        }\n    })\n    const comments = await handleResponse(response, (json) => json)\n    return comments\n}\n\nexport async function createDetailComment(content) {\n    const response = await fetch(`${baseUrl}/detail_comments`, {\n        method: 'POST',\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        },\n        body: JSON.stringify({ detail_comment: {\n            detail_id: currentDetail().id,\n            content: content\n        }})\n    })\n    const comment = await handleResponse(response, (json) => json)\n    return comment\n}\n\nexport async function deleteDetailComment(commentId) {\n    const response = await fetch(`${baseUrl}/detail_comments/${commentId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        }\n    })\n    const comment = await handleResponse(response, (json) => json)\n    return comment\n}","import React, {useState} from 'react'\nimport './UpdateDeadlineForm.css'\nimport { connect } from 'react-redux'\nimport { currentDetail, parseTimestamp } from '../../helpers/helpers'\nimport { updateDetail } from '../../actions/detail'\nimport Edit from '@material-ui/icons/Edit'\nimport DatePicker from 'react-datepicker'\n\nfunction UpdateDeadlineForm({ updateDetail }) {\n\n    const [showDeadlineSelect, setShowDeadlineSelect] = useState(false)\n    const [deadline, setDeadline] = useState(null)\n\n    return (\n        <div className='update-deadline-form'>\n            {!showDeadlineSelect ?\n        <> \n        {currentDetail().deadline ?\n            <>\n                <div className='deadline'>\n                    <span>\n                        Deadline: {parseTimestamp(currentDetail().deadline)}\n                    </span>\n                    <Edit onClick={() => setShowDeadlineSelect(true)}/>\n                </div>\n            </>\n        :\n            <>\n                <div className='no-deadline'>\n                    <span>\n                        No deadline\n                    </span>\n                <Edit onClick={() => setShowDeadlineSelect(true)}/>\n                </div>\n            </>\n    }\n    </>\n:\n    <div className='update-deadline'>\n        <span>Deadline:</span>\n        <br/>\n        <form \n            action=\"\"\n            onSubmit={(e) => {\n                e.preventDefault()\n                updateDetail(currentDetail().id, {deadline: deadline})\n                setShowDeadlineSelect(false)\n            }}\n            required\n        >\n            <DatePicker \n                selected={deadline}\n                onChange={date => setDeadline(date)}\n                showTimeSelect\n                dateFormat=\"Pp\"\n                />\n            <input type=\"submit\" value=\"Save\"/>\n        </form>\n        <button onClick={() => setShowDeadlineSelect(false)}>\n            Cancel\n        </button>\n    </div>\n}\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        details: state.detail.details\n    }\n}, { updateDetail })(UpdateDeadlineForm)\n\n\n\n\n","import { baseUrl, currentDetail } from '../helpers/helpers'\nimport { getToken } from '../actions/auth'\n\nexport const fetchAssignees = () => {\n    return fetch(`${baseUrl}/assignments?detail_id=${currentDetail().id}`, {\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        }\n    })\n    .then(res => res.json())\n}\n\nexport const addAssignee = (userId) => {\n    return fetch(`${baseUrl}/assignments`, {\n        method: 'POST',\n        headers: {\n            \"Accept\": 'application/json',\n            \"Content-Type\": 'application/json',\n            Authorization: getToken()\n        },\n        body: JSON.stringify({assignment: {user_id: userId, detail_id: `${currentDetail().id}`}})\n    })\n    .then(res => res.json())\n}\n\nexport const removeAssignee = (userId, detailId) => {\n    return fetch(`${baseUrl}/assignments`, {\n        method: 'DELETE',\n        headers: {\n            \"Accept\": 'application/json',\n            \"Content-Type\": 'application/json',\n            Authorization: getToken()\n        },\n        body: JSON.stringify({assignment: { user_id: userId, detail_id: detailId}})\n    })\n    .then(res => res.json())\n}\n\n","import React, { useState } from 'react'\nimport './AssignmentsEditor.css'\nimport { connect } from 'react-redux'\nimport { useQuery, useMutation } from 'react-query' \nimport Select from 'react-select'\nimport { currentTeam, currentDetail } from '../../helpers/helpers'\nimport { fetchAssignees, removeAssignee, addAssignee } from '../../queries/detailAssignees'\nimport RemoveCircle from '@material-ui/icons/RemoveCircle'\n\n\nfunction AssignmentsEditor({ currentUser }) {\n\n    const [showAddAssignee, setShowAddAssignee] = useState(false)\n    const [selectedAssignee, setSelectedAssignee] = useState(null)\n\n    \n    const { isLoading, error, data: assignees, refetch } = useQuery(\"assignees\", fetchAssignees)\n    \n    const { mutate: mutateAddAssignee } = useMutation(addAssignee, {\n        onSuccess: () => {\n            refetch()\n        }\n    })\n    \n    const { mutate: mutateDeleteAssignee } = useMutation(removeAssignee, {\n        onSuccess: () => {\n            refetch()\n        }\n    })\n\n    let memberOptions = []\n    if (assignees) {\n        memberOptions = currentTeam().members.map(member => {\n            return {value: member.id, label: member.username}\n        }).filter(member => !assignees.map(assignee => assignee.id).includes(member.value))\n\n    }\n\n    if (error) return \"An Error Occured..\" + error.message\n\n    console.log(assignees)\n\n    return (\n        <div className=\"assignments-editor\">\n            {assignees && !isLoading ?\n                <>\n                    <h3>Assigned team members:</h3>\n                    {assignees.map(assignee => \n                        <div key={assignee.id} className=\"assignment-card\">\n                            <span className='name'>{assignee.username}</span>\n                            {currentUser.id === currentTeam().leader_id ?\n                                <div \n                                    className='remove-assignee-btn'\n                                    data-id={assignee.id}\n                                    onClick={(e) => {\n                                        mutateDeleteAssignee(e.target.dataset.id, currentDetail().id)\n                                    }}\n                                >\n                                        <RemoveCircle />\n                                </div>\n                                : null\n                            }\n                        </div>\n                    )}\n                </>\n                : null\n            }\n            <br/>\n            {currentUser.id === currentTeam().leader_id ?\n                <>\n                    {!showAddAssignee ?\n                        <button \n                            type='button'\n                            onClick={() => setShowAddAssignee(true)}\n                        >\n                            Assign Team Member\n                        </button>\n                        :\n                        <div className='add-assignee'>\n                            <form\n                                className='add-assignee-form'\n                                onSubmit={(e) => {\n                                    e.preventDefault()\n                                    mutateAddAssignee(selectedAssignee.value)\n                                    setShowAddAssignee(false)\n                                }}\n                            >\n                                <Select\n                                    options={memberOptions}\n                                    onChange={setSelectedAssignee}\n                                >\n                                </Select>\n                                <br/>\n                                <div className=\"buttons\">\n                                    <input type=\"submit\" value=\"Assign\"/>\n                                    <button \n                                        type='button'\n                                        onClick={() => setShowAddAssignee(false)}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    }\n                </>\n                : null\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        assignees: state.detail.detailAssignees,\n        currentUser: state.auth.currentUser\n    }\n})(AssignmentsEditor)\n\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './DetailEditor.css'\nimport { useQuery, useMutation } from 'react-query'\nimport { fetchDetailComments, createDetailComment, deleteDetailComment } from '../../queries/detailComments'\nimport { completeDetail } from '../../actions/detail'\nimport { currentTeam, currentDetail } from '../../helpers/helpers'\nimport CommentCard from '../cards/CommentCard'\nimport NewCommentForm from '../forms/NewCommentForm'\nimport UpdateDeadlineForm from '../forms/UpdateDeadlineForm'\nimport AssignmentsEditor from './AssignmentsEditor'\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\n\n\nfunction DetailEditor({ currentUser, completeDetail, deleteDetail, details }) {\n    \n    const { isLoading, error, data: comments, refetch, remove } = useQuery(\"detailComments\", fetchDetailComments)\n\n    const { mutate: mutateAddComment } = useMutation(createDetailComment, {\n        onSuccess: () => {\n            refetch()\n        }\n    })\n\n    const { mutate: mutateDeleteComment } = useMutation(deleteDetailComment, {\n        onSuccess: () => {\n            refetch()\n        }\n    })\n\n    useEffect(() => {\n        remove()\n        refetch()\n    }, [details, refetch, remove])\n\n    if (error) return \"An Error Occured: \" + error.message\n\n    if (currentDetail()) {\n        return (\n            <section className='detail-editor'>\n                <div className=\"detail-top\">\n                    <button \n                        type='button'\n                        className={currentDetail().completed ? \"complete-btn complete\" : \"complete-btn\"}\n                        onClick={(e) => {\n                            completeDetail(currentDetail())\n                        }}\n                    >\n                        {currentDetail().completed ? 'Mark Incomplete' : 'Mark Complete'}\n                        {currentDetail().completed ? <CheckCircle /> : <CheckCircleOutline />}\n                    </button>\n                    {currentUser.id === currentTeam().leader_id ||\n                        currentUser.id === currentDetail.creator_id ?\n                            <button \n                                type='button'\n                                className='delete-btn'\n                                onClick={() => {\n                                    deleteDetail(currentDetail().id)\n                                }} \n                            >\n                                <DeleteOutline />\n                            </button>\n                        :null\n                    }\n                </div>\n                <h2>{currentDetail().content}</h2>\n                \n                <UpdateDeadlineForm />\n                <AssignmentsEditor />\n                <br/>\n                <br/>\n                <NewCommentForm \n                    commentType='detail'\n                    addComment={(comment) => mutateAddComment(comment)}\n                />\n                <div className=\"comments-container\">\n                    {\n                    comments && !isLoading ? \n                        comments.map(comment =>\n                            <CommentCard \n                                key={comment.id} \n                                comment={comment} \n                                commentType='detail'\n                                deleteComment={(comment) => mutateDeleteComment(comment)} \n                            />\n                            )\n                        : \"LOADING...\"\n                    }\n                </div>\n            </section>\n        )\n    \n    } else {\n        return (\n            <section className=\"detail-editor empty\">\n            </section>\n        )\n    }\n\n}\n\nexport default connect((state) => {\n    return {\n        comments: state.detail.detailComments,\n        currentUser: state.auth.currentUser,\n        assignees: state.detail.detailAssignees,\n        details: state.detail.details\n    }\n}, { completeDetail })(DetailEditor)\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './TaskWorkspace.css'\nimport DetailsContainer from './DetailsContainer'\nimport DetailEditor from './DetailEditor'\nimport { currentTask, currentDetail } from '../../helpers/helpers'\n\nfunction TaskWorkspace() {\n\n    if (currentTask()) {\n        return (\n            <section className='task-workspace'>\n                {currentTask() ?\n                    <DetailsContainer />\n                : null\n                }\n                {currentDetail() ?\n                    <DetailEditor />\n                : null\n                }\n            </section>\n        )\n    } else {\n        return (\n            <section className='task-workspace'>\n                <div className=\"no-task-placeholder\">\n                    <div className=\"logo\"></div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default connect((state) => {\n    return {\n        details: state.detail.details,\n        tasks: state.task.tasks\n    }\n})(TaskWorkspace)\n\n\n\n","import React, { useState } from 'react'\nimport './NewTaskForm.css'\nimport { connect } from 'react-redux'\nimport { addTask } from '../../actions/task'\nimport { currentProject } from '../../helpers/helpers'\nimport { updateUserSelections } from '../../actions/auth'\n\nfunction NewTaskForm({ currentUser, addTask, updateUserSelections }) {\n\n    const [title, setTitle] = useState('')\n    const [showForm, setShowForm] = useState(false)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        addTask(title, currentProject(), currentUser)\n        updateUserSelections(currentUser.id)\n        setTitle('')\n        setShowForm(false)\n    }\n\n    return (\n        <div className='new-task'>\n            { !showForm ? \n                <button \n                    type='button'\n                    onClick={() => setShowForm(true)}\n                >\n                    + Add New Goal\n                </button>\n                :\n                <>\n                    <button \n                        type='button'\n                        onClick={() => setShowForm(false)}\n                    >\n                        + Cancel\n                    </button>\n                    <form\n                        className=\"new-task-form\"\n                        onSubmit={(e) => handleSubmit(e)}\n                        >\n                        <br/>\n                        <input \n                            type=\"text\"\n                            id=\"add-new-task\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            />\n                        <input type=\"submit\" value=\"Add Goal\"/>\n                    </form>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n       currentUser: state.auth.currentUser,\n       projects: state.project.projects\n    }\n}, { addTask, updateUserSelections } )(NewTaskForm)\n\n\n","import { baseUrl, handleResponse } from '../helpers/helpers'\nimport { getToken } from '../actions/auth'\n\nexport const setCurrentProject = (projectId) => {\n    return (dispatch) => {\n        dispatch({ type: \"SET_CURRENT_PROJECT\", payload: projectId })\n    }\n}\n\nexport const addProject = (projectName, currentTeam, currentUser, deadline) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/projects`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({project: {\n                title: projectName, \n                team_id: currentTeam.id, \n                creator_id: currentUser.id,\n                deadline: deadline\n            }}) \n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({ type: \"ADD_PROJECT\", payload: json.project})\n                dispatch({ type: \"SET_CURRENT_PROJECT\", payload: json.project.id })\n                dispatch({ type: \"SET_CURRENT_TASK\", payload: null})\n                dispatch({ type: \"SET_CURRENT_DETAIL\", payload: null})\n                dispatch({\n                    type: \"SET_USER_SELECTED\", \n                    payload: {\n                        'selected_project': json.project.id,\n                        'selected_task': null,\n                        'selected_detail': null\n                    }\n                })\n            })\n        })\n    }\n}\n\nexport const deleteProject = (projectId, currentUser) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/projects/${projectId}`, {\n            method: \"DELETE\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({project: {user_id: currentUser.id}})\n        })\n        .then(res => {\n            return handleResponse(res, () => {\n                dispatch({ type: 'DELETE_PROJECT', payload: projectId })\n            }) \n        })\n    }\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './TaskContainer.css'\nimport TopBar from '../TopBar'\nimport TaskCard from '../cards/TaskCard'\nimport TaskWorkspace from '../dashboard/TaskWorkspace'\nimport NewTaskForm from '../forms/NewTaskForm'\nimport ErrorField from '../ErrorField'\nimport { setCurrentTask } from '../../actions/task'\nimport { setCurrentDetail } from '../../actions/detail'\nimport { deleteProject } from '../../actions/project'\nimport { updateUserSelections } from '../../actions/auth'\nimport { currentProject, parseTimestamp, currentTeam } from '../../helpers/helpers'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\n\nfunction TaskContainer({ tasks, setCurrentTask, setCurrentDetail, currentUser, deleteProject, updateUserSelections }) {\n\n    const [error, setError] = useState('')\n\n    let currentTasks\n    if (currentProject()) {\n        currentTasks = [...tasks.filter(task => task.project_id === currentProject().id)]\n    }\n\n    return (\n        <div className='task-container'>\n            <TopBar />\n            <div className='task-fields'>\n                {currentProject()? \n                    <section className='tasks-select'>\n                        {currentUser.id === currentProject().creator_id || \n                        currentUser.id === currentTeam().leader_id ?\n                            <button \n                                type='button' \n                                className='delete-btn'\n                                onClick={() => {\n                                    deleteProject(currentProject().id, currentUser)\n                                    .catch(error => setError(error))\n                                }}\n                            >\n                                <DeleteOutline />\n                            </button>\n                        :\n                            null\n                        }\n                        <div className=\"title\">\n                            <h1>{currentProject().title}</h1>\n                            { currentProject().deadline ?\n                                <h2>Deadline: {parseTimestamp(currentProject().deadline)}</h2>\n                                :\n                                null\n                            }\n                        </div>\n                        {error ? \n                            <ErrorField \n                                error={error}\n                                timeout=\"5000\"\n                                clearError={() => setError('')}\n                            />\n                            :\n                            null\n                        }\n                        <h1>Project Goals:</h1>\n                        <NewTaskForm />\n                        {currentTasks.map(task => \n                            <TaskCard\n                                key={task.id}\n                                task={task}\n                                loadTask={(e) => {\n                                    setCurrentTask(Number(e.target.id))\n                                    setCurrentDetail(null)\n                                    updateUserSelections(currentUser.id)\n                                }}\n                            />\n                        )}\n                    </section>\n                    :\n                    null\n                }   \n                <TaskWorkspace />\n            </div>\n        </div>\n    )\n    \n}\n\n\nexport default connect((state) => {\n    return {\n        tasks: state.task.tasks,\n        projects: state.project.projects,\n        currentUser: state.auth.currentUser,\n        teams: state.team.teams,\n        loggedIn: state.auth.loggedIn\n    }\n}, { setCurrentTask, deleteProject, setCurrentDetail, updateUserSelections })(TaskContainer)\n","import React, { useState } from 'react'\nimport \"./NewProjectForm.css\"\nimport { connect } from 'react-redux'\nimport { addProject } from '../../actions/project' \nimport { currentTeam } from '../../helpers/helpers'\nimport { updateUserSelections } from '../../actions/auth'\n\nfunction AddProjectForm({ addProject, currentUser, showOverlay, setShowOverlay }) {\n    const [title, setTitle] = useState('')\n    const [deadline, setDeadline] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        addProject(title, currentTeam(), currentUser, deadline)\n        updateUserSelections(currentUser.id)\n        setTitle('')\n        setDeadline('')\n        setShowOverlay(false)\n    }\n\n    return (\n        <div className={showOverlay ? \"new-project-form show\" : \"new-project-form hide\"}>\n            <form \n                action=\"\"\n                onSubmit={(e) => handleSubmit(e)}\n            >   \n                <label htmlFor=\"title\">Project Name:</label> \n                <br/>\n                <input \n                    type=\"text\" \n                    id=\"title\"\n                    value={title}\n                    onChange={e => setTitle(e.target.value)}\n                />\n                <br/>\n                <br/>\n                <label htmlFor=\"deadline\">Deadline:</label>\n                <br/>\n                <input \n                    type=\"datetime-local\" \n                    id=\"deadline\" \n                    value={deadline}\n                    onChange={e => setDeadline(e.target.value)}\n                />\n                <br/>\n                <br/>\n                <input type=\"submit\" value=\"Create Project\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n}, { addProject })(AddProjectForm)","import { baseUrl, handleResponse } from '../helpers/helpers'\nimport { getToken } from './auth'\n\nexport const populateTeams = (userId, preSelectId) => {\n    return async (dispatch) => {\n        return await fetch(`${baseUrl}/teams?userId=${userId}`)\n        .then((res) => {\n            return handleResponse(res, (teams) => {\n                dispatch({ type: \"POPULATE_TEAMS\", payload: teams })\n                dispatch({ type: \"SET_CURRENT_TEAM\", payload: preSelectId })\n            })\n        })\n    }\n}\n\nexport const loadTeamData = (teamId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/teams/${teamId}`)\n        .then((res) => {\n            return handleResponse(res, (teamData) => {\n                dispatch({ type: \"POPULATE_PROJECTS\", payload: teamData.projects})\n                dispatch({ type: \"POPULATE_TASKS\", payload: teamData.tasks})\n                dispatch({ type: \"POPULATE_DETAILS\", payload: teamData.details})\n            })\n        })\n    }\n}\n\nexport const setCurrentTeam = (teamId) => {\n    return (dispatch) => {\n        dispatch({type: \"SET_CURRENT_TEAM\", payload: Number(teamId)})\n    }\n}\n\nexport const addTeam = (teamName, currentUser) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/teams`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({\n                team: {\n                    name: teamName, \n                    user_id: currentUser.id\n                }\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                let team = json.team\n                team.members = []\n                team.leader = currentUser.username\n                dispatch({type: 'ADD_TEAM', payload: json.team})\n                return json\n            })\n        })\n    }\n}\n\nexport const addMember = (query, teamId) => {\n    return (dispatch) => {\n        fetch(`${baseUrl}/memberships`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'applicaiton/json',\n                'Content-type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({membership: {query: query, team_id: teamId}})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({\n                    type: \"ADD_MEMBER\", \n                    payload: {member: json.member, teamId: teamId}\n                })\n            })\n        })\n    }\n}\n\nexport const removeMember = (memberId, teamId) => {\n    return (dispatch) => {\n        fetch(`${baseUrl}/memberships`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'applicaiton/json',\n                'Content-type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({membership: {user_id: memberId, team_id: teamId}})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({\n                    type: \"REMOVE_MEMBER\", \n                    payload: {memberId: memberId, teamId: teamId}\n                })\n            })\n        })\n    }\n}\n\nexport const updateTeam = (teamId, param) => {\n    return (dispatch) => {\n        fetch(`${baseUrl}/teams/${teamId}`, {\n            method: 'PATCH',\n            headers: {\n                'Accept': 'applicaiton/json',\n                'Content-type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({team: param})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: \"UPDATE_TEAM\", payload: json.team})\n            })\n        })\n    }\n}\n\nexport const clearTeam = () => {\n    return (dispatch) => {\n        dispatch({type: \"CLEAR_DETAILS\"})\n        dispatch({type: \"CLEAR_TASKS\"})\n        dispatch({type: \"CLEAR_PROJECTS\"})\n    }\n}\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './TeamToolbar.css'\nimport NewProjectForm from '../forms/NewProjectForm'\nimport { updateUserSelections } from '../../actions/auth'\nimport { setCurrentProject } from '../../actions/project'\nimport { setCurrentTask } from '../../actions/task'\nimport { setCurrentDetail } from '../../actions/detail'\nimport { currentTeam } from '../../helpers/helpers'\nimport { clearTeam } from '../../actions/team'\n\nfunction ToolbarContainer({ \n    projects, \n    setCurrentProject, \n    setCurrentTask, \n    setCurrentDetail,\n    clearTeam,\n    updateUserSelections, \n    currentUser \n}) {\n\n    const [showOverlay, setShowOverlay] = useState(false)\n\n    const history = useHistory()\n\n    return (\n        <div className='team-toolbar'>\n            <div \n                className={showOverlay ? 'overlay show' : 'overlay hide'}\n                onClick={() => setShowOverlay(false)}\n            ></div>\n            <NewProjectForm \n                showOverlay={showOverlay} \n                setShowOverlay={setShowOverlay}/>\n            <h1>Team:</h1>\n            <h2>{currentTeam().name}</h2>\n            \n            <br/>\n            <button \n                type='button'\n                onClick={() => {\n                    setCurrentProject(null)\n                    setCurrentTask(null)\n                    setCurrentDetail(null)\n                    updateUserSelections(currentUser.id)\n                    clearTeam()\n                    history.push('./teams')\n                }}\n            >\n                Manage Teams\n            </button>\n            <br/>\n            <hr/>\n            <h2>Projects:</h2>\n            <button \n                type='button' \n                className='addProjectBtn'\n                onClick={() => {\n                    setShowOverlay(true) \n                }}\n            >\n                Start New Project\n            </button>\n            <br/>\n            {projects.length > 0 ?\n                projects.map(project => \n                    <div \n                    key={project.id}\n                    className={project.selected ? \"project-card selected\" : \"project-card\"}\n                    onClick={() => {\n                        setCurrentProject(project.id)\n                        setCurrentTask(null)\n                        setCurrentDetail(null)\n                        updateUserSelections(currentUser.id)\n                    }}\n                    >\n                        {project.title}\n                    </div>\n                )\n            : null\n            } \n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        projects: state.project.projects,\n        currentUser: state.auth.currentUser\n    }\n}, { \n    setCurrentProject, \n    setCurrentTask, \n    setCurrentDetail,\n    clearTeam,\n    updateUserSelections \n})(ToolbarContainer)\n","import React, { useState } from 'react'\nimport './TaskToolbar.css'\nimport { connect } from 'react-redux'\nimport { currentProject, currentTeam, parseTimestamp } from '../../helpers/helpers'\nimport { deleteProject } from '../../actions/project'\nimport { setCurrentTask } from '../../actions/task'\nimport { setCurrentDetail } from '../../actions/detail'\nimport { updateUserSelections } from '../../actions/auth'\nimport ErrorField from '../ErrorField'\nimport NewTaskForm from '../forms/NewTaskForm'\nimport TaskCard from '../cards/TaskCard'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\n\nfunction TaskToolbar({ currentUser, setCurrentTask, setCurrentDetail, updateUserSelections, tasks }) {\n    const [error, setError] = useState('')\n\n    let currentTasks\n    if (currentProject()) {\n        currentTasks = [...tasks.filter(task => task.project_id === currentProject().id)]\n    }\n    return (\n        <div>\n            {currentProject() ?\n                <div className='task-fields'>\n                    <section className='tasks-select'>\n                        {currentUser.id === currentProject().creator_id || \n                        currentUser.id === currentTeam().leader_id ?\n                            <button \n                                type='button' \n                                className='delete-btn'\n                                onClick={() => {\n                                    deleteProject(currentProject().id, currentUser)\n                                    .catch(error => setError(error))\n                                }}\n                            >\n                                <DeleteOutline />\n                            </button>\n                        :\n                            null\n                        }\n                        <div className=\"title\">\n                            <h1>{currentProject().title}</h1>\n                            { currentProject().deadline ?\n                                <h2>Deadline: {parseTimestamp(currentProject().deadline)}</h2>\n                                :\n                                null\n                            }\n                        </div>\n                        {error ? \n                            <ErrorField \n                                error={error}\n                                timeout=\"5000\"\n                                clearError={() => setError('')}\n                            />\n                            :\n                            null\n                        }\n                        <h1>Project Goals:</h1>\n                        <NewTaskForm />\n                        {currentTasks.map(task => \n                            <TaskCard\n                                key={task.id}\n                                task={task}\n                                loadTask={(e) => {\n                                    setCurrentTask(Number(e.target.id))\n                                    setCurrentDetail(null)\n                                    updateUserSelections(currentUser.id)\n                                }}\n                            />\n                        )}\n                    </section>\n                </div>\n            : null\n            }\n        </div>\n    )\n}\n\nexport default connect(state => {\n    return {\n        currentUser: state.auth.currentUser,\n        tasks: state.task.tasks\n    }\n}, { setCurrentTask, setCurrentDetail, updateUserSelections })(TaskToolbar)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './MobileDashboard.css'\nimport TeamToolbar from '../dashboard/TeamToolbar'\nimport TaskToolbar from './TaskToolbar'\nimport DetailsContainer from './DetailsContainer'\nimport DetailEditor from './DetailEditor'\nimport { currentTask, currentDetail } from '../../helpers/helpers'\n\nfunction MobileDashboard() {\n   \n    return (\n        <div className='mobile-dashboard'>\n            <TeamToolbar />\n            <br />\n            <br />\n            <TaskToolbar />\n            { currentTask() ?\n                <DetailsContainer />\n            : null\n            }\n            { currentDetail() ?\n                <DetailEditor />\n            : null\n            }\n        </div>\n    )\n   \n}\n\nexport default connect(state => {\n    return {\n        currentUser: state.auth.currentUser,\n        tasks: state.task.tasks,\n        details: state.detail.details\n    }\n})(MobileDashboard)","import React, { useEffect, useState, useLayoutEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './Dashboard.css'\nimport TaskContainer from '../dashboard/TaskContainer'\nimport TeamToolbar from '../dashboard/TeamToolbar'\nimport MobileDashboard from '../dashboard/MobileDashboard'\nimport { loadTeamData, setCurrentTeam }  from '../../actions/team'\nimport { currentTeam } from '../../helpers/helpers'\n\nfunction Dashboard({ loadTeamData, currentUser, setCurrentTeam }) {\n\n    useEffect(() => {\n        if (currentUser.selected_team) {\n            setCurrentTeam(currentUser.selected_team, currentUser.id)\n        }\n        loadTeamData(currentTeam().id)\n    }, [loadTeamData, currentUser, setCurrentTeam])\n    \n    const [width, setWidth] = useState(0)\n\n    useLayoutEffect(() => {\n        function updateSize() {\n          setWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    if (width > 1300) {\n        return (\n            <div className='dashboard'>\n                <TaskContainer />\n                <TeamToolbar />\n            </div>\n        )\n    } else {\n        return (\n            <>\n                <MobileDashboard />\n            </>\n        )\n    }\n}\n\nexport default connect((state) => {\n    return {\n        teams: state.team.teams,\n        projects: state.project.projects,\n        currentUser: state.auth.currentUser\n    }\n}, { loadTeamData, setCurrentTeam })(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './MemberCard.css'\nimport { removeMember } from '../../actions/team'\n\nfunction MemberCard(props) {\n    let currentTeam = props.teams.find(team => team.selected === true) \n    return (\n        <div className='member-card'>\n            <div className='name-div'>\n                <div className='avatar'>\n                    {props.member.username[0]}\n                </div>\n                <h2>{props.member.username}</h2>\n            </div>\n            <h3 className='email'>{props.member.email}</h3>\n            {props.removable === 'true' ? \n                <button\n                    className='delete-member-button'\n                    type='button'\n                    onClick={(e) => {\n                        window.confirm(`Are You Sure You Want To Remove ${props.member.username} from the team?`) &&\n                        props.removeMember(props.member.id, currentTeam.id)\n                    }}\n                >\n                    X\n                </button>\n            :\n                null\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        teams: state.team.teams\n    }\n}, { removeMember })(MemberCard)\n","import React, { useState } from 'react'\nimport './NewMemberForm.css'\nimport { currentTeam } from '../../helpers/helpers'\nimport { connect } from 'react-redux' \nimport { addMember } from '../../actions/team'\n\nfunction AddMemberForm({ addMember }) {\n    \n    const [query, setQuery] = useState('')\n\n    return (\n        <div className=\"new-member-form\">\n            <h3>Search for team members by email or username:</h3>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault()\n                    addMember(query, currentTeam().id)\n                    setQuery('')\n                }}\n            >\n                <input \n                    type=\"text\"\n                    value={query}\n                    onChange={e => {\n                        setQuery(e.target.value)\n                    }}\n                />\n                <input type=\"submit\" value=\"Add Member\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default connect(null, { addMember })(AddMemberForm)","import React, { useState } from 'react'\nimport './ChangeTeamNameForm.css'\nimport { connect } from 'react-redux'\nimport { currentTeam } from '../../helpers/helpers'\nimport { updateTeam } from '../../actions/team' \n\nfunction ChangeTeamNameForm({ updateTeam }) {\n\n    const [teamName, setTeamName] = useState(currentTeam().name)\n\n    return (\n        <div className=\"change-team-name-form\">\n            <h2>Settings:</h2>\n            <h3>Update Team Name:</h3>\n            <form \n                action=\"\"\n                onSubmit={e => {\n                    e.preventDefault()\n                    updateTeam(currentTeam().id, {name: teamName})\n                }}\n            >\n                <input \n                    type=\"text\"\n                    value={teamName}\n                    onChange={(e) => {\n                        setTeamName(e.target.value)\n                    }}\n                />\n                <input type=\"submit\" value=\"Update Name\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default connect(null, { updateTeam })(ChangeTeamNameForm)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './TeamPage.css'\nimport { currentTeam } from '../../helpers/helpers'\nimport { setCurrentProject } from '../../actions/project'\nimport { setCurrentTask } from '../../actions/task'\nimport { setCurrentDetail } from '../../actions/detail'\nimport MemberCard from '../cards/MemberCard'\nimport NewMemberForm from '../forms/NewMemberForm'\nimport ChangeTeamNameForm from '../forms/ChangeTeamNameForm'\n\nfunction TeamPage({ currentUser, setCurrentProject, setCurrentTask, setCurrentDetail }) {\n\n    useEffect(() => {\n        setCurrentProject(null)\n        setCurrentTask(null)\n        setCurrentDetail(null)\n    }, [currentUser, setCurrentProject, setCurrentTask, setCurrentDetail])\n\n    return (\n        <div className='team-page'>\n            <section className=\"title\">\n                <h1>{currentTeam() ? currentTeam().name : 'No Team Loaded'}</h1>\n                <Link to=\"/teams/select\">Select Team</Link>\n                <Link to=\"/dashboard\">Dashboard</Link>\n            </section>\n            {currentTeam() ? \n                <>\n                    <section className=\"team-options\">\n                        <div className=\"members\">\n                            <h2>Leader:</h2>\n                            <MemberCard \n                                member={currentTeam().leader} \n                                removable='false' \n                            />\n                            <h2>Members:</h2>\n                            {currentTeam().members.map(member => \n                                <MemberCard\n                                    key={member.id} \n                                    member={member} \n                                    removable={currentUser.id === currentTeam().leader.id ? \n                                        'true' : 'false'} \n                                />\n                            )}\n                        <NewMemberForm />\n                        </div>\n                    </section>\n                    <section className=\"settings\">\n                        <ChangeTeamNameForm />\n                    </section>\n                </>\n            : null\n            }\n        </div>\n    )\n\n}\n\nexport default connect((state => {\n    return {\n        teams: state.team.teams,\n        currentUser: state.auth.currentUser\n    }\n}), { setCurrentProject, setCurrentTask, setCurrentDetail })(TeamPage)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './NewTeamPage.css'\nimport { addTeam } from '../../actions/team'\nimport TopBar from '../TopBar'\n\nfunction NewTeamPage(props) {\n    const [teamName, setTeamName] = useState('')\n\n    return (\n        <div className='new-team-page'>\n            <TopBar />\n            <form \n            action=\"\"\n            onSubmit={e => {\n                e.preventDefault()\n                props.addTeam(teamName, props.currentUser)\n                .then(res => props.history.push('/dashboard'))\n            }}\n            >\n                <h1>Create a New Team:</h1>\n                <label htmlFor='team-name'>Team Name:</label>\n                <br/>\n                <input \n                    type='text' \n                    id='team-name'\n                    onChange={e => {setTeamName(e.target.value)}}\n                    value={teamName}\n                />\n                <input type=\"submit\" value='Create Team'/>\n            </form>\n        </div>\n    )\n}\n\nexport default connect((state) =>{\n    return {\n        currentUser: state.auth.currentUser\n    }\n}, { addTeam })(NewTeamPage)\n","import React from 'react'\nimport './TeamCard.css'\n\n\nfunction TeamCard({ team, selectTeam }) {\n    \n    return (\n        <fieldset \n            className='team-card'\n            onClick={() => {\n                selectTeam()\n            }}\n        >\n            <h2>\n                {team.name}\n            </h2>\n        </fieldset>\n    )\n}\n\nexport default TeamCard\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport './TeamSelectPage.css'\nimport TeamCard from '../cards/TeamCard'\nimport TopBar from '../TopBar'\nimport { setCurrentTeam, clearTeam } from '../../actions/team'\nimport { updateUserSelections } from '../../actions/auth'\n\nfunction TeamSelectPage({ \n    teams,\n    setCurrentTeam,\n    updateUserSelections,\n    currentUser\n}) {\n\n    const history = useHistory()\n\n    const handleSelectTeam = (team) => {           \n        setCurrentTeam(team.id)\n        updateUserSelections(currentUser.id)\n        history.push('/dashboard')\n    }\n\n    useEffect(() => {\n        setCurrentTeam(null)\n        updateUserSelections(currentUser.id)\n    }, [currentUser.id, updateUserSelections, setCurrentTeam])\n\n    return (\n        <div className='team-select'>\n            <TopBar />\n            {teams.length > 0 ?\n            <>\n                <div className=\"team-card-container\">\n                    <h2 className=\"title\">Click to load team Dashboard:</h2>\n                    {teams.map(team => \n                        <TeamCard \n                            key={team.id} \n                            team={team}\n                            selectTeam={() => handleSelectTeam(team)}\n                        />\n                    )}\n                </div>\n                <Link to='./new'>Create A New Team</Link>\n            </>\n            :\n            <>\n                <h2>You don't have any teams yet!</h2>\n                <Link to='./new'>Create Your First Team</Link>\n            </>\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        teams: state.team.teams,\n        currentUser: state.auth.currentUser\n    }\n}, { setCurrentTeam,\n    clearTeam, \n    updateUserSelections \n})(TeamSelectPage)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { signupUser } from \"../../actions/auth\"\nimport { populateTeams } from \"../../actions/team\"\nimport ErrorField from '../../components/ErrorField'\nimport './Signup.css'\n\nclass Signup extends React.Component {\n  state = {\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    error: '',\n    emailFocus: false,\n    usernameFocus: false,\n    passwordFocus: false,\n    passwordConfirmationFocus: false\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  };\n\n  handleFocus = (e) => {\n    this.setState({\n      [e.target.dataset.focus]: true\n    })\n  }\n  \n  handleBlur = (e) => {\n    if (e.target.value === '') {\n      this.setState({\n        [e.target.dataset.focus]: false\n      })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.password !== this.state.passwordConfirmation) {\n      this.setState({error: 'Passwords must match'})\n    } else {\n      const { email, username, password } = this.state;\n      this.props.signupUser({ email, username, password })\n      .then(() => {\n        this.props.redirect('/teams/new')\n      })\n      .catch((error) => {\n        this.setState({ error: error })\n      });\n    }\n  };\n\n  passwordMatch = () => {\n    if (this.state.password !== '' \n      && this.state.passwordConfirmation !== '') {\n        if (this.state.password !== this.state.passwordConfirmation) {\n          return 'no-match'\n        } else {\n          return 'match'\n        }\n    } else {\n      return ''\n    } \n  }\n\n  render() {\n    return (\n      <div className='signup-window'>\n        <form\n          onSubmit={this.handleSubmit}\n          className='signup-form'\n        >\n          <h1>Sign Up</h1>\n          {this.state.error !== '' ?\n            <ErrorField \n              error={this.state.error}\n              clearError={() => this.setState({error: ''})}\n            />\n          :\n            null\n          }\n            <label htmlFor='username' className={this.state.usernameFocus ? 'focus' : ''}>\n              Username\n            </label>\n            <input\n              type='text'\n              name='username'\n              id='username'\n              data-focus='usernameFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.username}\n            />\n            <br/>\n            <label htmlFor='email' className={this.state.emailFocus ? 'focus' : ''}>\n              Email\n            </label>\n            <input\n              type='text'\n              name='email'\n              id='email'\n              data-focus='emailFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.email}\n            />\n            <br/>\n            <label htmlFor='password' className={this.state.passwordFocus ? 'focus' : ''}>\n              Password\n            </label>\n            <input\n              type='password'\n              className={this.passwordMatch()}\n              name='password'\n              id='password'\n              data-focus='passwordFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.password}\n            />\n            <br/>\n            <label htmlFor='password-confirmation' className={this.state.passwordConfirmationFocus ? 'focus' : ''}>\n              Password Confirmation\n            </label>\n            <input\n              type='password'\n              className={this.passwordMatch()}\n              name='passwordConfirmation'\n              id='password-confirmation'\n              data-focus='passwordConfirmationFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.passwordConfirmation}\n            />\n            <br/>\n          <input\n            type='submit'\n            value='Sign Up'\n          />\n        </form>\n        <button \n          type='button'\n          onClick={this.props.showSignup}\n        >\n          Existing User?\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => {\n  return {\n    auth: state.auth\n  }\n}, { signupUser, populateTeams })(Signup);","import React from \"react\";\nimport { ImSpinner3 } from \"react-icons/im\";\n\nconst LoadingSpinner = () => {\n  return (\n    <div className='fixed top-0 flex items-center w-screen h-screen z-20 bg-gray-700 bg-opacity-70'>\n      <div className='text-5xl text-white text-center w-10 mx-auto'>\n        <ImSpinner3 className='animate-spin' />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\"\nimport { checkAuth } from \"../../actions/auth\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nfunction withAuth(WrappedComponent) {\n  class Wrapper extends React.Component {\n    componentDidMount() {\n      this.props.dispatchCheckAuth();\n    }\n\n    render() {\n      if (!this.props.authChecked) {\n        return <LoadingSpinner />;\n      } else if (!this.props.loggedIn) {\n        return (\n          <>\n            <Redirect push to=\"/\" />\n          </>\n        );\n      } else {\n        return <WrappedComponent {...this.props} />;\n      }\n    }\n  }\n\n  const mapStateToProps = ({\n    auth: { authChecked, loggedIn, currentUser }\n  }) => {\n    return { authChecked, loggedIn, currentUser };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      dispatchCheckAuth: () => dispatch(checkAuth())\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n}\n\nexport default withAuth;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport { populateTeams } from \"../../actions/team\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nfunction loadData(WrappedComponent) {\n  class Wrapper extends React.Component {\n    componentDidMount() {\n        if (!this.props.teamsPopulated) {\n            this.props.populateTeams(\n                this.props.currentUser.id || this.props.currentUser.data.id,\n                1\n            )\n        }\n    }\n\n    render() {\n        if (this.props.teamsPopulated) {\n            return this.props.teams.length > 0 ?\n                <WrappedComponent {...this.props} />\n            :\n                <Redirect to=\"/teams/new\" />\n        } else {\n            return <LoadingSpinner />;\n        }\n    }\n  }\n\n  return connect((state) => {\n      return {\n          currentUser: state.auth.currentUser,\n          teamsPopulated: state.team.populated,\n          teams: state.team.teams\n      }\n  }, { populateTeams })(Wrapper);\n}\n\nexport default loadData;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport './Login.css'\nimport { loginUser } from \"../../actions/auth\";\nimport { populateTeams, setCurrentTeam } from \"../../actions/team\";\nimport ErrorField from '../ErrorField'\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: '',\n    emailFocus: false,\n    passwordFocus: false\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleFocus = (e) => {\n    e.target.name === 'email' ?\n    this.setState({\n      emailFocus: true\n    })\n    :\n    this.setState({\n      passwordFocus: true\n    })\n  }\n\n  handleBlur = (e) => {\n    if (e.target.name === 'email') {\n      if (this.state.email === '') {\n        this.setState({\n          emailFocus: false\n        })\n      }\n    } else {\n      if (this.state.password === '') {\n        this.setState({\n          passwordFocus: false\n        })\n      }\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    this.props.loginUser({ email, password })\n    .then(() => {\n      if (this.props.auth.currentUser.selected_team) {\n        this.props.redirect('/dashboard')\n      } else {\n        this.props.redirect('/teams/select')\n      }\n    })\n    .catch((error) => this.setState({ error: error }));\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.mobileLogin || this.props.width > 1300 ? \n        <div className='login-window'>\n          {this.state.error ? \n            <ErrorField \n              error={this.state.error}\n              clearError={() => this.setState({error: ''})}\n            />\n            : null\n          }\n          <form\n            onSubmit={this.handleSubmit}\n            className='login-form'\n          >\n            <h1>Log In</h1>\n              <label htmlFor='email' className={this.state.emailFocus ? 'focus' : ''}>\n                Email or Username\n              </label>\n              <input\n                type='text'\n                name='email'\n                id='email'\n                onFocus={this.handleFocus}\n                onChange={this.handleChange}\n                onBlur={this.handleBlur}\n                value={this.state.email}\n              />\n              <br/>\n              <br/>\n              <label htmlFor='password' className={this.state.passwordFocus ? 'focus' : ''}>\n                Password\n              </label>\n              <input\n                type='password'\n                name='password'\n                id='password'\n                onFocus={this.handleFocus}\n                onChange={this.handleChange}\n                onBlur={this.handleBlur}\n                value={this.state.password}\n              />\n              <br/>\n              <br/>\n            <input\n              type='submit'\n              value='Log In'\n            />\n          </form>\n          <button \n            type='button'\n            onClick={this.props.showSignup}\n          >\n            New User?\n          </button>\n        </div>\n        : null\n        }\n      </>\n    );\n  }\n}\n\nexport default connect((state) => {\n  return {\n    auth: state.auth\n  }\n}, { loginUser, populateTeams, setCurrentTeam })(Login);","import React, { useState, useLayoutEffect } from 'react'\nimport './Landing.css'\nimport Login from '../auth/Login'\nimport Signup from '../auth/Signup'\n\nfunction Landing(props)  {\n\n    const [login, setLogin] = useState(true)\n    const [width, setWidth] = useState(props.width)\n    const [mobileLogin, setMobileLogin] = useState(false)\n    \n    const redirect = (url) => {\n        props.history.push(url)\n    }\n\n    useLayoutEffect(() => {\n        function updateSize() {\n          setWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    return (\n        <div className=\"landing\">\n            <div className=\"custom-shape-divider-top-1620756923\">\n                <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                    <path d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\" opacity=\".25\" className=\"shape-fill\"></path>\n                    <path d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\" opacity=\".5\" className=\"shape-fill\"></path>\n                    <path d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\" className=\"shape-fill\"></path>\n                </svg>\n            </div>\n            <div className=\"landing-content\">\n                <div className=\"splash\" alt='Splash'></div>\n                {login ?\n                    <Login \n                        redirect={redirect} \n                        showSignup={() => setLogin(false)}\n                        mobileLogin={mobileLogin}\n                        width={width}\n                    />\n                :\n                    <Signup \n                        redirect={redirect} \n                        showSignup={() => setLogin(true)}\n                        mobileLogin={mobileLogin}\n                        width={width}\n                    />\n                }\n                <div className=\"title\">\n                    <div className=\"logo\"></div>\n                    <span className=\"letters\">\n                        askaholik\n                    </span>\n                </div>\n                {width < 1300 && !mobileLogin ?\n                    <div className=\"login-buttons\">\n                        <button\n                            type='button'\n                            onClick={() => setMobileLogin(true)}\n                        >LOG IN</button>\n                    </div>\n                    : null\n                }\n                { !mobileLogin || width > 1300 ?\n                    <div className=\"subtext\">\n                        <h2>Streamline your Team's Workflow</h2>\n                        <p>Communication is an integral part of any successful company.  <br/><br/>We help teams collaborate at the speed of thought. </p>\n                    </div>\n                    :null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Landing\n","import './App.css';\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dashboard from './components/pages/Dashboard'\nimport TeamPage from './components/pages/TeamPage'\nimport NewTeamPage from './components/pages/NewTeamPage'\nimport TeamSelectPage from './components/pages/TeamSelectPage'\nimport Signup from './components/auth/Signup'\nimport Logout from './components/auth/Logout'\nimport withAuth from './components/auth/withAuth'\nimport loadData from './components/auth/loadData'\nimport Landing from './components/pages/Landing'\n\nexport default class App extends Component {\n  componentDidMount(){\n    document.title = \"Taskaholik\"\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/dashboard' component={withAuth(loadData(Dashboard))} />\n            <Route exact path='/teams' component={withAuth(loadData(TeamPage))} />\n            <Route exact path='/teams/new' component={withAuth(NewTeamPage)} />\n            <Route exact path='/teams/select' component={withAuth(loadData(TeamSelectPage))} />\n            <Route exact path='/signup' component={Signup} />\n            <Route exact path='/logout' component={Logout} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}