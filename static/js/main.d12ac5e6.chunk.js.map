{"version":3,"sources":["reducers/auth.js","reducers/team.js","reducers/project.js","reducers/task.js","reducers/detail.js","reducers/index.js","store.js","helpers/helpers.js","actions/auth.js","components/auth/Logout.js","components/TopBar.js","components/TaskCard.js","actions/task.js","components/ErrorField.js","components/NewCommentForm.js","actions/detail.js","components/CommentCard.js","components/NewDetailForm.js","components/DetailsList.js","containers/DetailsColumn.js","components/DetailEditor.js","components/TaskWorkspace.js","components/NewTaskForm.js","containers/TaskContainer.js","actions/project.js","components/AddProjectForm.js","containers/ToolbarContainer.js","components/pages/Dashboard.js","actions/team.js","components/MemberCard.js","components/AddMemberForm.js","components/ChangeTeamNameForm.js","components/pages/TeamPage.js","components/pages/NewTeamPage.js","components/TeamCard.js","components/pages/TeamSelectPage.js","components/auth/Signup.js","components/LoadingSpinner.js","components/auth/withAuth.js","components/auth/loadData.js","components/auth/Login.js","components/pages/Landing.js","App.js","index.js"],"names":["initialState","authChecked","loggedIn","currentUser","teams","populated","projects","tasks","taskComments","details","detailComments","detailAssignees","combineReducers","auth","state","action","type","payload","team","index","map","selected","newTeams","id","find","length","findIndex","teamId","members","filter","member","memberId","splice","project","newProjects","task","newTasks","newTask","Number","idx","item","slice","detail","newDetails","completed","status","newDetail","assignee","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","currentTeam","store","getState","currentProject","currentTask","currentDetail","parseTimestamp","timestamp","date","Date","hours","getUTCHours","minutes","getUTCMinutes","ampm","toDateString","handleResponse","res","callback","ok","window","location","href","json","then","Promise","reject","message","baseUrl","setToken","token","localStorage","setItem","now","getTime","getToken","getItem","checkAuth","dispatch","fetch","headers","Accept","Authorization","user","connect","logoutUser","method","errors","history","useHistory","onClick","push","username","className","TaskCard","loadTask","e","title","populateTasks","projectId","ErrorField","this","props","timeout","timer","setInterval","clearError","parseInt","clearInterval","error","Component","addTaskComment","taskId","content","authorId","author","body","JSON","stringify","task_comment","task_id","author_id","comment","addDetailComment","detailId","detail_comment","detail_id","commentType","useState","setContent","setError","useEffect","onSubmit","preventDefault","catch","name","value","onChange","target","removeTaskComment","commentId","currentUserId","user_id","removeDetailComment","data-id","dataset","created_at","addDetail","deadline","creator_id","setDeadline","redirect","setRedirect","showForm","setShowForm","to","htmlFor","placeholder","comments","setCurrentDetail","assignees","deleteTask","completeDetail","deleteDetail","addAssignee","userId","assignment","removeAssignee","showAddAssignee","setShowAddAssignee","selectedAssignee","setSelectedAssignee","memberOptions","label","includes","options","TaskWorkspace","addTask","creator","project_id","setTitle","setCurrentTask","populateDetails","deleteProject","leader_id","addProject","projectName","team_id","showOverlay","setShowOverlay","setCurrentProject","populateProjects","a","populateTeams","preSelectId","removeMember","membership","email","removable","confirm","addMember","query","setQuery","ChangeTeamNameForm","teamName","setTeamName","leader","addTeam","setCurrentTeam","Signup","password","passwordConfirmation","emailFocus","usernameFocus","passwordFocus","passwordConfirmationFocus","handleChange","setState","handleFocus","focus","handleBlur","handleSubmit","event","signupUser","data-focus","onFocus","onBlur","showLogin","React","credentials","get","userJson","LoadingSpinner","withAuth","WrappedComponent","Wrapper","dispatchCheckAuth","loadData","teamsPopulated","data","Login","loginUser","showSignup","Landing","url","login","data-name","xmlns","viewBox","preserveAspectRatio","d","opacity","alt","App","basename","process","exact","path","component","Dashboard","TeamPage","NewTeamPage","TeamSelectPage","NewProjectPage","Logout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d12ac5e6.chunk.js","sourcesContent":["const initialState = {\n  authChecked: false,\n  loggedIn: false,\n  currentUser: {}\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'AUTHENTICATED':\n      return {\n        authChecked: true,\n        loggedIn: true,\n        currentUser: action.payload\n      };\n    case 'NOT_AUTHENTICATED':\n      return {\n        authChecked: true,\n        loggedIn: false,\n        currentUser: {}\n      };\n    default:\n      return state;\n  }\n}","const initialState = {\n    teams: [],\n    populated: false \n}\n\nexport default function teamReducer(state = initialState, action) {\n    let team;\n    let index;\n\n    switch (action.type) {\n        case \"POPULATE_TEAMS\":\n            let teams = action.payload\n            teams.map(team => team.selected = false)\n            return {\n                ...state,\n                teams: [...action.payload],\n            }\n        case \"SET_CURRENT_TEAM\":\n            let newTeams = state.teams.map(team => {\n                if (team.id === action.payload) {\n                    return {...team, selected: true}\n                } else {\n                    return {...team, selected: false}\n                }\n            })\n            if (!newTeams.find(team => team.selected === true) && newTeams.length > 0) {\n                newTeams[0].selected = true\n            }\n            return {\n                ...state,\n                teams: newTeams,\n                populated: true\n        }\n        case \"ADD_TEAM\":\n            team = action.payload\n            team.selected = true\n\n            return {\n                ...state,\n                teams: [...state.teams, team]\n            }\n        case \"REMOVE_MEMBER\":\n            index = state.teams.findIndex(team => team.id === action.payload.teamId)\n            team = state.teams[index]\n            team.members = team.members.filter(member => action.payload.memberId !== member.id)\n\n            return {\n                ...state, \n                teams: [\n                    ...state.teams.splice(0, index), \n                    team, \n                    ...state.teams.splice(index + 1)\n                ]\n            }\n        case \"ADD_MEMBER\":\n            index = state.teams.findIndex(team => team.id === action.payload.teamId)\n            team = state.teams[index]\n            team.members = [...team.members, action.payload.member]\n\n            return {\n                ...state, \n                teams: [\n                    ...state.teams.splice(0, index), \n                    team, \n                    ...state.teams.splice(index + 1)\n                ]\n            }\n        case \"CLEAR_TEAMS\":\n            return {\n                ...state,\n                teams: [],\n                populated: false\n            }\n        default:\n            return state\n    }\n}","const initialState = {\n    projects: []\n};\n  \nexport default function populateReducer(state = initialState, action) {\n    let newProjects\n\n    switch (action.type) {\n        case \"POPULATE_PROJECTS\":\n            return {\n                ...state,\n                projects: [...action.payload]\n            }\n        case \"SET_CURRENT_PROJECT\":\n            newProjects = state.projects.map(project => {\n                if (project.id === action.payload) {\n                    project.selected = true\n                    return project\n                } else {\n                    project.selected = false\n                    return project\n                }\n            })\n            return {\n                ...state,\n                projects: newProjects\n            }\n        case \"ADD_PROJECT\":\n            return {\n                ...state, \n                projects: [...state.projects, action.payload]\n            }\n        case \"DELETE_PROJECT\":\n            newProjects = state.projects.filter(project => \n                project.id !== action.payload\n            )\n            return {\n                ...state, \n                projects: [...newProjects]\n            }\n        case \"CLEAR_PROJECTS\":\n            return {\n                ...state,\n                projects: []\n            }\n      default:\n        return state;\n    }\n}","const initialState = {\n    tasks: [],\n    taskComments: [],\n  };\n  \n  export default function taskReducer(state = initialState, action) {\n    let index;\n\n    switch (action.type) {\n        case \"POPULATE_TASKS\":\n            return {\n                ...state,\n                tasks: [...action.payload]\n            }\n        case \"POPULATE_TASK_COMMENTS\":\n            return {\n                ...state,\n                taskComments: [...action.payload]\n            }\n        case \"SET_CURRENT_TASK\":\n            let newTasks = state.tasks.map(task => {\n                if (task.id === action.payload) {\n                    return {...task, selected: true}\n                } else {\n                    return {...task, selected: false}\n                }\n            })\n            return {\n                ...state,\n                tasks: newTasks\n            }\n        case \"ADD_TASK\":\n            let newTask = action.payload.task\n            newTask.selected = true\n            return {\n                ...state,\n                tasks: [\n                    ...state.tasks.map(task => {\n                        task.selected = false\n                        return task\n                    }), \n                    newTask\n                ]\n            }\n        case \"DELETE_TASK\":\n            index = state.tasks.findIndex(task => task.id === Number(action.payload))\n            return {\n                ...state,\n                tasks: [...state.tasks.filter((task, idx) => idx !== index)]\n            }\n        case \"ADD_TASK_COMMENT\":\n            return {\n                ...state,\n                taskComments: [\n                    ...state.taskComments, action.payload\n                ]\n            }\n        case \"REMOVE_TASK_COMMENT\":\n        index = state.taskComments.findIndex(item => item.id === Number(action.payload))\n        return {\n            ...state,\n            taskComments: [\n                ...state.taskComments.slice(0, index),\n                ...state.taskComments.slice(index + 1) \n            ]\n        }\n        case \"CLEAR_TASKS\":\n            return {\n                ...state,\n                tasks: [],\n                taskComments: []\n            }\n        case \"CLEAR_TASK_COMMENTS\":\n            return {\n                ...state,\n                taskComments: []\n            }\n      default:\n        return state;\n    }\n  }","const initialState = {\n    details: [],\n    detailComments: [],\n    detailAssignees: []\n};\n\n  \nexport default function populateReducer(state = initialState, action) {\n    let index;\n    let detail;\n    \n    switch (action.type) {\n        case \"SET_CURRENT_DETAIL\":\n            let newDetails = state.details.map(detail => {\n                if (detail.id === action.payload.id) {\n                    return {...detail, selected: true}\n                } else {\n                    return {...detail, selected: false}\n                }\n            })\n            return {\n                ...state,\n                details: newDetails\n            }\n        case \"POPULATE_DETAIL_COMMENTS\":\n            return {\n                ...state,\n                detailComments: [...action.payload]\n            }\n        case \"POPULATE_DETAIL_ASSIGNEES\":\n            return {\n                ...state,\n                detailAssignees: [...action.payload]\n            }\n        case \"POPULATE_DETAILS\":\n            return {\n                ...state,\n                details: [...action.payload]\n            }\n        case \"COMPLETE_DETAIL\":\n            index = state.details.findIndex(detail => detail.id === action.payload.detail.id)\n            detail = state.details[index]\n\n            detail.completed = !action.payload.status\n\n            return {\n                ...state,\n                details: [\n                    ...state.details.slice(0, index), \n                    detail, \n                    ...state.details.slice(index + 1)\n                ]\n            }\n        case \"ADD_DETAIL\":\n            let newDetail = action.payload.detail\n            newDetail.selected = true\n            return {\n                ...state,\n                details: [\n                    ...state.details.map(detail => {\n                        detail.selected = false\n                        return detail\n                    }), \n                    newDetail\n                ]\n            }\n        case \"DELETE_DETAIL\":\n            return {\n                ...state,\n                details: [...state.details.filter(detail => detail.id !== action.payload)]\n            }\n        case \"ADD_DETAIL_COMMENT\":\n        return {\n            ...state,\n            detailComments: [\n                ...state.detailComments, action.payload\n            ]\n        }\n        case \"REMOVE_DETAIL_COMMENT\":\n        index = state.detailComments.findIndex(detail => detail.id === Number(action.payload))\n        return {\n            ...state,\n            detailComments: [\n                ...state.detailComments.slice(0, index),\n                ...state.detailComments.slice(index + 1) \n            ]\n        }\n        case \"CLEAR_DETAILS\":\n            return {\n                ...state,\n                details: [],\n                detailComments: [],\n                detailAssignees: []\n            }\n        case \"ADD_ASSIGNEE\":\n            return {\n                ...state,\n                detailAssignees: [\n                    ...state.detailAssignees, action.payload\n                ]\n            }\n        case \"REMOVE_ASSIGNEE\":\n            index = state.detailAssignees.findIndex(assignee => assignee.id === Number(action.payload))\n            return {\n                ...state,\n                detailAssignees: [\n                    ...state.detailAssignees.slice(0, index),\n                    ...state.detailAssignees.slice(index + 1) \n                ]\n            }\n        default:\n            return state;\n        \n    }\n}","// src/reducers/index.js\nimport { combineReducers } from 'redux'\nimport authReducer from './auth'\nimport teamReducer from './team'\nimport projectReducer from './project'\nimport taskReducer from './task'\nimport detailReducer from './detail'\n\nexport default combineReducers({\n  auth: authReducer,\n  team: teamReducer,\n  project: projectReducer,\n  task: taskReducer,\n  detail: detailReducer,\n})","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)","import store from '../store'\n\nexport function currentTeam() {\n    return store.getState().team.teams.find(team => team.selected === true)\n}\n\nexport function currentProject() {\n    return store.getState().project.projects.find(project => project.selected === true)\n}\n\nexport function currentTask() {\n    return store.getState().task.tasks.find(task => task.selected === true)\n}\n\nexport function currentDetail() {\n    return store.getState().detail.details.find(detail => detail.selected === true)\n}\n\nexport function parseTimestamp(timestamp) {\n    const date = new Date(timestamp)\n    let hours = date.getUTCHours()%12\n    hours = hours === 0 ? 12 : hours\n    const minutes = ('0' + date.getUTCMinutes()).slice(-2)\n    const ampm = date.getUTCHours() > 12 ? 'PM' : 'AM'\n    return date.toDateString() + ', ' + hours + ':' + minutes + ' ' + ampm\n}\n\nexport const handleResponse = (res, callback) => {\n    if (res.ok) {\n        res.json().then(json => callback(json))\n    } else {\n        if (res.status === 401) {window.location.href = '/'}\n        return res.json().then(json => Promise.reject(json.message))\n    }\n} \n\nexport const baseUrl = 'https://taskaholik-back-end.herokuapp.com'\n// export const baseUrl = 'http://localhost:3001'","import { baseUrl } from '../helpers/helpers' \n\nconst setToken = (token) => {\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"lastLoginTime\", new Date(Date.now()).getTime());\n};\n\nexport const getToken = () => {\n  const now = new Date(Date.now()).getTime();\n  const thirtyMinutes = 1000 * 60 * 30;\n  const timeSinceLastLogin = now - localStorage.getItem(\"lastLoginTime\");\n  if (timeSinceLastLogin < thirtyMinutes) {\n    return localStorage.getItem(\"token\");\n  }\n};\n\nexport const signupUser = (credentials) => {\n    return (dispatch) => {\n      return fetch(`${baseUrl}/signup`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ user: credentials })\n      }).then((res) => {\n        if (res.ok) {\n          setToken(res.headers.get(\"Authorization\"));\n          return res\n            .json()\n            .then((userJson) =>\n              dispatch({ type: 'AUTHENTICATED', payload: userJson })\n            );\n        } else {\n          return res.json().then((errors) => {\n            dispatch({ type: 'NOT_AUTHENTICATED' });\n            return Promise.reject(errors);\n          });\n        }\n      });\n    };\n};\n\nexport const loginUser = (credentials) => {\n    return async (dispatch) => {\n        return fetch(`${baseUrl}/login`, {\n          method: \"POST\",\n          headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ user: credentials }),\n        })\n        .then((res) => {\n          if (res.ok) {\n            setToken(res.headers.get(\"Authorization\"));\n            return res.json()\n            .then((userJson) => {\n              dispatch({ type: 'AUTHENTICATED', payload: userJson.data })\n              return userJson\n            })\n          } else {\n            return res.json()\n            .then((errors) => {\n            dispatch({ type: 'NOT_AUTHENTICATED' });\n            return Promise.reject(errors);\n            });\n          }\n        });\n    };\n};\n  \nexport const logoutUser = () => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/logout`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: getToken()\n        },\n        }).then((res) => {\n        if (res.ok) {\n            dispatch({type: 'CLEAR_DETAILS'})\n            dispatch({type: 'CLEAR_TASKS'})\n            dispatch({type: 'CLEAR_PROJECTS'})\n            dispatch({type: 'CLEAR_TEAMS'})\n            return dispatch({ type: 'NOT_AUTHENTICATED' });\n\n        } else {\n            return res.json().then((errors) => {\n            dispatch({ type: 'NOT_AUTHENTICATED' });\n            return Promise.reject(errors);\n            });\n        }\n        });\n    };\n};\n\nexport const checkAuth = () => {\n    return (dispatch) => {\n      return fetch(`${baseUrl}/current_user`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: getToken()\n        }\n      }).then((res) => {\n        if (res.ok) {\n          return res.json().then(user => dispatch({type: 'AUTHENTICATED', payload: user}))\n        } else {\n          return Promise.reject(dispatch({type: 'NOT_AUTHENTICATED'}))\n        }\n      });\n    };\n  };","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Logout = ({ logoutUser }) => {\n  const history = useHistory();\n  \n  const handleClick = () => {\n    logoutUser()\n    .then(() => history.push(\"/\"));\n  };\n\n  return (\n    <button onClick={handleClick}>\n      Logout\n    </button>\n  );\n};\n\nexport default connect(null, { logoutUser })(Logout);","import React from 'react'\nimport { connect } from 'react-redux'\nimport './TopBar.css'\nimport Logout from '../components/auth/Logout'\n\nfunction TopBar({ username }) {\n    return (\n        <div className='top-bar'>\n            <div className=\"logo\"></div>\n            <h3>askaholik</h3>\n            <h2>\n                Welcome back, {username}\n            </h2>\n            <Logout />\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        username: state.auth.currentUser.username\n    }\n})(TopBar)\n\n\n","import React from 'react'\nimport './TaskCard.css'\n\nexport default function TaskCard({ task, loadTask }) {\n    return (\n        <div\n            className={task.selected ? 'task-card selected' : 'task-card'}\n            id={task.id} \n            onClick={(e) => {\n                loadTask(e);\n            }}>\n            <h2>{task.title}</h2>\n\n        </div>\n    )\n}\n\n","import { baseUrl, handleResponse } from '../helpers/helpers'\nimport { getToken } from './auth'\n\nexport const populateTasks = (projectId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/tasks?projectId=${projectId}`, {\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            }\n        })\n        .then((res) => {\n            return handleResponse(res, (tasks) => {\n                tasks.map(task => task['selected'] = false)\n                dispatch({ type: \"POPULATE_TASKS\", payload: tasks})\n            })\n        })\n    }\n};         \n\nexport const setCurrentTask = (taskId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/tasks/${taskId}`, {\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            }\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: \"CLEAR_DETAIL_COMMENTS\"})\n                dispatch({type: \"SET_CURRENT_TASK\", payload: json.task.id})\n                dispatch({type: \"POPULATE_TASK_COMMENTS\", payload: json.comments})\n            })\n        })\n    }\n}\n\nexport const addTask = (title, currentProject, creator) => {\n    return (dispatch) => {\n        fetch(`${baseUrl}/tasks`, {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({\n                title: title, \n                project_id: currentProject.id, \n                creator_id: creator.id\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'CLEAR_DETAILS'})\n                dispatch({type: 'CLEAR_DETAIL_COMMENTS'})\n                dispatch({type: 'CLEAR_TASK_COMMENTS'})\n                dispatch({type: 'ADD_TASK', payload: json})\n            })\n        })\n    }\n}\n\nexport const deleteTask = (taskId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/tasks/${taskId}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: getToken()\n            }\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'DELETE_TASK', payload: taskId})\n            })\n        })\n    }\n}\n\nexport const addTaskComment = (taskId, content, authorId, author) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/task_comments`, {\n            method: 'POST',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({\n                task_comment: {\n                    task_id: taskId,\n                    content: content, \n                    author_id: authorId\n                }\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: \"ADD_TASK_COMMENT\", \n                    payload: {\n                        ...json.comment,\n                        author: author,\n                    }\n                })\n            })\n        })\n    }\n}\n\nexport const removeTaskComment = (commentId, currentUserId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/task_comments/${commentId}`, {\n            method: 'DELETE',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify(\n                {task_comment: \n                    {user_id: currentUserId}\n                }\n            )\n        })\n        .then((res) => {\n            return handleResponse(res, (json) => {\n                dispatch({type: \"REMOVE_TASK_COMMENT\", payload: commentId})\n            })\n        })\n    }\n} \n","import React, { Component } from 'react'\nimport './ErrorField.css'\n\nexport default class ErrorField extends Component {\n    \n    componentDidMount() {\n        if (this.props.timeout) {\n            this.timer = setInterval(\n                this.props.clearError,\n                parseInt(this.props.timeout)\n            )\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer)\n    }\n\n    render() {\n        return (\n            <div className=\"error-field\">\n                <p>{this.props.error}</p>\n                <button \n                    className=\"dismiss\"\n                    onClick={() => {\n                        this.props.clearError()\n                        clearInterval(this.timer)\n                    }}\n                >\n                    X\n                </button>\n            </div>\n        )\n    } \n}\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './NewCommentForm.css'\nimport { addTaskComment } from '../actions/task'\nimport { addDetailComment } from '../actions/detail'\nimport ErrorField from '../components/ErrorField'\nimport { currentTask, currentDetail } from '../helpers/helpers'\n\nfunction NewCommentForm({ currentUser, commentType, addTaskComment, addDetailComment, tasks }) {\n    const [content, setContent] = useState('')\n    const [error, setError] = useState('')\n\n    useEffect(() => setError(''), [tasks])\n\n    return (\n        <div className='new-comment-form'>\n            <form \n                onSubmit={(e) => {\n                    e.preventDefault()\n                    switch (commentType) {\n                        case 'task':\n                            addTaskComment(\n                                currentTask().id, \n                                content,  \n                                currentUser.id, \n                                currentUser.username\n                            ).catch(error => {setError(error)})\n                            break\n                        case 'detail':\n                            addDetailComment(\n                                currentDetail().id, \n                                content,  \n                                currentUser.id, \n                                currentUser.username\n                            ).catch(error => setError(error))\n                            break\n                        default:\n                    }\n                    setContent('')\n                }}\n            >\n                <input \n                    type='text'\n                    name='content' \n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                >\n                </input>\n                <input\n                    className={commentType=== \"task\" ? 'comment-submit task' : 'comment-submit detail' }\n                    type='submit' \n                    value=\"Post Comment\"/>\n                <br/>\n            </form>\n            { error ?\n                <ErrorField \n                    error={error}\n                    timeout='5000'\n                    clearError={() => setError('')}\n                /> : null\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        currentUser: state.auth.currentUser,\n        tasks: state.task.tasks,\n        details: state.detail.details\n    }\n}, { addTaskComment, addDetailComment })(NewCommentForm)\n\n\n","import { baseUrl, handleResponse } from '../helpers/helpers' \nimport { getToken } from './auth'\n\nexport const populateDetails = (taskId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details?taskId=${taskId}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: getToken()\n            }\n        })\n        .then(res => {\n            return handleResponse(res, (details) => {\n                details.map(detail => detail['selected'] = false)\n                dispatch({type: \"POPULATE_DETAILS\", payload: details})\n            })\n        })\n    }\n}\n\nexport const setCurrentDetail = (detailId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details/${detailId}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: getToken()\n            }\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: \"SET_CURRENT_DETAIL\", payload: json.detail})\n                dispatch({type: \"POPULATE_DETAIL_COMMENTS\", payload: json.comments})\n                dispatch({type: \"POPULATE_DETAIL_ASSIGNEES\", payload: json.assignees})\n            })\n        })\n    }\n}\n\nexport const completeDetail = (detail) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details/${detail.id}/complete`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: getToken()\n            },\n            body: JSON.stringify({status: detail.completed})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({\n                    type: 'COMPLETE_DETAIL', \n                    payload: {detail: detail, status: detail.completed}\n                })\n            })\n        })\n    }\n}\n\nexport const addDetail = (content, currentTask, currentUser, deadline) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details`, {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({\n                content: content, \n                task_id: currentTask.id, \n                creator_id: currentUser.id,\n                deadline: deadline\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'ADD_DETAIL', payload: json})\n            })\n        })\n    }\n}\n\nexport const addDetailComment = (detailId, content, authorId, author) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/detail_comments`, {\n            method: 'POST',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({\n                detail_comment: {\n                    detail_id: detailId,\n                    content: content, \n                    author_id: authorId\n                }\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch(\n                    {type: \"ADD_DETAIL_COMMENT\", \n                        payload: {\n                            ...json.comment,\n                            author: author,\n                        }\n                    }\n                )\n            })\n        })\n    }\n}\n\nexport const removeDetailComment = (commentId, currentUserId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/detail_comments/${commentId}`, {\n            method: 'DELETE',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            },\n            body: JSON.stringify({detail_comment: {user_id: currentUserId}})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: \"REMOVE_DETAIL_COMMENT\", payload: commentId})\n            })\n        })\n    }\n} \n\nexport const deleteDetail = (detailId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/details/${detailId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: getToken()\n            }\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'DELETE_DETAIL', payload: detailId})\n            })\n        })\n    }\n}\n\nexport const addAssignee = (userId, detailId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/assignments`, {\n            method: 'POST',\n            headers: {\n                \"Accept\": 'application/json',\n                \"Content-Type\": 'application/json',\n                Authorization: getToken()\n            },\n            body: JSON.stringify({assignment: {user_id: userId, detail_id: detailId}})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'ADD_ASSIGNEE', payload: json.member})\n            })\n        })\n    }\n}\n\nexport const removeAssignee = (userId, detailId) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/assignments`, {\n            method: 'DELETE',\n            headers: {\n                \"Accept\": 'application/json',\n                \"Content-Type\": 'application/json',\n                Authorization: getToken()\n            },\n            body: JSON.stringify({assignment: { user_id: userId, detail_id: detailId}})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({type: 'REMOVE_ASSIGNEE', payload: userId})\n            })\n        })\n    }\n}\n\n\n","import React from 'react'\nimport './CommentCard.css'\nimport { connect } from 'react-redux'\nimport { removeTaskComment } from '../actions/task'\nimport { removeDetailComment } from '../actions/detail'\nimport { parseTimestamp } from '../helpers/helpers'\nimport Delete from '@material-ui/icons/Delete'\nimport ChatBubble from '@material-ui/icons/ChatBubble'\n\nfunction CommentCard({ comment, currentUser, commentType, removeTaskComment, removeDetailComment }) {\n\n    return (\n        <div className=\"comment-card\">\n            <div key={comment.id} className={commentType === 'task' ? 'comment-body task' : 'comment-body detail'}>\n                    {currentUser.id === comment.author_id ?\n                        <div \n                            className='delete-btn'\n                            data-id={comment.id}\n                            onClick={(e) => {\n                                switch (commentType) {\n                                    case 'task':\n                                        removeTaskComment(\n                                            e.target.dataset.id, \n                                            currentUser.id\n                                        )\n                                    break\n                                    case 'detail':\n                                        removeDetailComment(\n                                            e.target.dataset.id, \n                                            currentUser.id\n                                        )\n                                    break\n                                    default:\n                                }\n                            }}\n                        >\n                            <Delete className='delete-icon' />\n                        </div>\n                    :\n                        null\n                    }\n                <span className='comment-content'>{comment.content}</span>\n                <span className='timestamp'>{parseTimestamp(comment.created_at)}</span>\n            </div>\n            <div className=\"author-div\">\n                <ChatBubble/>\n                <span>{comment.author}</span>\n            </div>\n        </div>\n    )\n\n}\n\nexport default connect((state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n}, { removeTaskComment, removeDetailComment })(CommentCard)\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport './NewDetailForm.css'\nimport { connect } from 'react-redux'\nimport { addDetail } from '../actions/detail'\nimport { currentTask } from '../helpers/helpers'\nimport { checkAuth } from '../actions/auth'\nimport Close from '@material-ui/icons/Close'\n\nfunction NewDetailForm({ currentUser, addDetail, checkAuth }) {\n\n    const [content, setContent] = useState('')\n    const [deadline, setDeadline] = useState(Date.now())\n    const [redirect, setRedirect] = useState(false)\n    const [showForm, setShowForm] = useState(false)\n\n    return (\n        <div className=\"new-detail-form\">\n            { redirect ? (<Redirect push to=\"/login\" />) : null }\n            { showForm ? \n                <> \n                    <button \n                        type='button'\n                        className=\"cancel-btn\"\n                        onClick={(e) => setShowForm(false)}\n                    >\n                        <Close />\n                    </button>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            checkAuth()\n                            .then(() => {\n                                addDetail(content, currentTask(), currentUser, deadline)\n                                setContent('')\n                                setShowForm(false)\n                            })\n                            .catch(() => {\n                                setRedirect(true)\n                            })\n                        }}\n                    >\n                        <label htmlFor=\"add-detail\">\n                            Description:\n                        </label>\n                        <br/>\n                        <input \n                            type=\"text\"\n                            id=\"add-detail\"\n                            value={content}\n                            placeholder='Description'\n                            onChange={(e) => setContent(e.target.value)}\n                            />\n                        <br/>\n                        <label htmlFor=\"deadline\"> Deadline:</label>\n                        <br/>\n                        <input \n                            type=\"datetime-local\"\n                            id=\"deadline\"\n                            value={deadline}\n                            onChange={e => setDeadline(e.target.value)}\n                        />\n                        <br/>\n                        <br/>\n                        <input type=\"submit\" value=\"Add Detail\"/>\n                    </form>\n                </>\n            :\n                <button \n                    className='show-form-btn'\n                    onClick={(e) => setShowForm(true)}\n                >\n                    + Add New Detail\n                </button>\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n       currentUser: state.auth.currentUser\n    }\n}, { addDetail, checkAuth } )(NewDetailForm)\n\n\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport './DetailsList.css'\nimport { setCurrentDetail } from '../actions/detail'\nimport { deleteTask } from '../actions/task'\nimport ErrorField from '../components/ErrorField'\nimport NewDetailForm from './NewDetailForm'\nimport { currentTask } from '../helpers/helpers'\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\n\n\nfunction DetailsList({ details, setCurrentDetail, deleteTask, tasks }) { \n    \n    const [error, setError] = useState('')\n\n    useEffect(() => {\n        setError('')\n    }, [tasks])\n\n    return (\n        <section className='details-list'>\n            <div className=\"detail-header\">\n                <h2>{currentTask().title}</h2>\n                <button\n                    className='delete-task-btn'\n                    onClick={(e) => {\n                        deleteTask(currentTask().id)\n                        .catch(error => {\n                            setError(error)\n                        })\n                    }}    \n                    >\n                    <DeleteOutline/>\n                </button>\n            </div>\n            {error !== '' ? \n                <ErrorField \n                    error={error}\n                    timeout='5000'\n                    clearError={() => setError('')} \n                /> : null\n            }\n            <NewDetailForm />\n            {details.map(detail =>\n                <div \n                    className={detail.selected? 'detail-card selected' : 'detail-card'}\n                    key={detail.id}\n                    data-id={detail.id}\n                    onClick={e => {\n                        setCurrentDetail(\n                            parseInt(e.target.dataset.id)\n                        )\n                    }}\n                >\n                    <span \n                        key={detail.id}\n                        className={detail.completed? 'checkmark completed' : 'checkmark'}\n                        data-id={detail.id}\n                        onClick={e => {\n                            setCurrentDetail(\n                                parseInt(e.target.dataset.id)\n                            )\n                        }}\n                    >\n                        {detail.completed ? <CheckCircle /> : <CheckCircleOutline />}\n                    </span>\n                    <span className=\"detail-body\">\n                        {detail.content}\n                    </span>\n                </div> \n            )}\n        </section>\n    ) \n}\n\nexport default connect((state) => {\n    return {\n        tasks: state.task.tasks,\n        comments: state.task.taskComments,\n        details: state.detail.details,\n    }\n}, { setCurrentDetail, deleteTask })(DetailsList)\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './DetailsColumn.css'\nimport { checkAuth } from '../actions/auth'\nimport NewCommentForm from '../components/NewCommentForm'\nimport CommentCard from '../components/CommentCard'\nimport DetailsList from '../components/DetailsList'\n\n\nfunction DetailsColumn({ comments }) {\n    \n    return (\n        <section className='details-column'>\n            <DetailsList />\n            <br/>\n            <br/>\n            <section className='task-comments'>\n                <NewCommentForm commentType='task' />\n                <div className='comment-container'>\n                    {comments.map(comment =>\n                        <CommentCard \n                        key={comment.id} \n                        comment={comment} \n                        commentType=\"task\" \n                        />\n                    )}\n                </div>\n            </section>\n        </section>\n    ) \n}\n\nexport default connect((state) => {\n    return {\n        comments: state.task.taskComments\n    }\n}, { checkAuth })(DetailsColumn)\n\n\n","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport Select from 'react-select'\nimport './DetailEditor.css'\nimport { completeDetail, deleteDetail, addAssignee, removeAssignee } from '../actions/detail'\nimport CommentCard from '../components/CommentCard'\nimport NewCommentForm from './NewCommentForm'\nimport { currentTeam, parseTimestamp, currentDetail } from '../helpers/helpers'\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport RemoveCircle from '@material-ui/icons/RemoveCircle'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\n\nfunction DetailEditor({ completeDetail, deleteDetail, addAssignee, removeAssignee, comments, assignees }) {\n\n    const [showAddAssignee, setShowAddAssignee] = useState(false)\n    const [selectedAssignee, setSelectedAssignee] = useState(null)\n\n    const memberOptions = currentTeam().members.map(member => {\n            return {value: member.id, label: member.username}\n    }).filter(member => !assignees.map(assignee => assignee.id).includes(member.value))\n\n    if (currentDetail()) {\n        return (\n            <section className='detail-editor'>\n                <div className=\"detail-top\">\n                    <button \n                        type='button'\n                        className={currentDetail().completed ? \"complete-btn complete\" : \"complete-btn\"}\n                        onClick={(e) => {\n                            completeDetail(currentDetail())\n                        }}\n                    >\n                        {currentDetail().completed ? 'Mark Incomplete' : 'Mark Complete'}\n                        {currentDetail().completed ? <CheckCircle /> : <CheckCircleOutline />}\n                    </button>\n                    <button \n                        type='button'\n                        className='delete-btn'\n                        onClick={() => {\n                            deleteDetail(currentDetail().id)\n                        }} \n                    >\n                        <DeleteOutline />\n                    </button>\n                </div>\n                <h2>{currentDetail().content}</h2>\n                <span className='deadline'>Deadline: {parseTimestamp(currentDetail().deadline)}</span>\n                <div className=\"assignments\">\n                    <h3>Assigned team members:</h3>\n                    {assignees.map(assignee => \n                        <div key={assignee.id} className=\"assignment-card\">\n                            <span className='name'>{assignee.username}</span>\n                            <div \n                                className='remove-assignee-btn'\n                                data-id={assignee.id}\n                                onClick={(e) => {\n                                    removeAssignee(e.target.dataset.id, currentTeam().id)\n                                }}\n                            >\n                                    <RemoveCircle />\n                            </div>\n                        </div>\n                    )}\n                    <br/>\n                    {!showAddAssignee ?\n                        <button \n                            type='button'\n                            onClick={() => setShowAddAssignee(true)}\n                        >\n                            Assign Team Member\n                        </button>\n                        :\n                        <div className='add-assignee'>\n                            <form\n                                className='add-assignee-form'\n                                onSubmit={(e) => {\n                                    e.preventDefault()\n                                    addAssignee(selectedAssignee.value, currentDetail().id)\n                                    setShowAddAssignee(false)\n                                }}\n                            >\n                                <Select\n                                    options={memberOptions}\n                                    onChange={setSelectedAssignee}\n                                >\n                                </Select>\n                                <br/>\n                                <div className=\"buttons\">\n                                    <input type=\"submit\" value=\"Assign\"/>\n                                    <button \n                                        type='button'\n                                        onClick={() => setShowAddAssignee(false)}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    }\n                </div>\n                <br/>\n                <br/>\n                <NewCommentForm commentType='detail'/>\n                <div className=\"comments-container\">\n                    {comments.map(comment =>\n                        <CommentCard \n                            key={comment.id} \n                            comment={comment} \n                            commentType='detail' \n                        />\n                    )}\n                </div>\n            </section>\n        )\n    \n    } else {\n        return (\n            <section className=\"detail-editor empty\">\n            </section>\n        )\n    }\n\n}\n\nexport default connect((state) => {\n    return {\n        comments: state.detail.detailComments,\n        currentUser: state.auth.currentUser,\n        assignees: state.detail.detailAssignees,\n        details: state.detail.details\n    }\n}, { completeDetail, deleteDetail, addAssignee, removeAssignee })(DetailEditor)\n\n\n","import React from 'react'\n// import { connect } from 'react-redux'\n// import NewCommentForm from './NewCommentForm'\n// import { removeTaskComment } from '../actions/task'\nimport DetailsColumn from '../containers/DetailsColumn'\n// import CommentCard from '../components/CommentCard'\nimport DetailEditor from '../components/DetailEditor'\nimport { currentTask } from '../helpers/helpers'\nimport './TaskWorkspace.css'\n\nexport default function TaskWorkspace() {\n\n    if (currentTask()) {\n        return (\n            <section className='task-workspace'>\n                <DetailsColumn />\n                <DetailEditor />\n            </section>\n        )\n    } else {\n        return (\n            <section className='task-workspace'>\n                <div className=\"no-task-placeholder\">\n                    <div className=\"logo\"></div>\n                </div>\n            </section>\n        )\n    }\n\n}\n\n\n","import React, { useState } from 'react'\nimport './NewTaskForm.css'\nimport { connect } from 'react-redux'\nimport { addTask } from '../actions/task'\nimport { currentProject } from '../helpers/helpers'\n\nfunction NewTaskForm({ currentUser, addTask }) {\n\n    const [title, setTitle] = useState('')\n    const [showForm, setShowForm] = useState(false)\n\n    return (\n        <div className='new-task'>\n            { !showForm ? \n                <button \n                    type='button'\n                    onClick={(e) => setShowForm(true)}\n                >\n                    + Add New Goal\n                </button>\n                :\n                <>\n                    <button \n                        type='button'\n                        onClick={(e) => setShowForm(false)}\n                    >\n                        + Cancel\n                    </button>\n                    <form\n                        className=\"new-task-form\"\n                        onSubmit={(e) => {\n                            e.preventDefault()\n                            addTask(title, currentProject(), currentUser)\n                            setTitle('')\n                            setShowForm(false)\n                        }}\n                        >\n                        <br/>\n                        <input \n                            type=\"text\"\n                            id=\"add-new-task\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            />\n                        <input type=\"submit\" value=\"Add Goal\"/>\n                    </form>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n       currentUser: state.auth.currentUser,\n       projects: state.project.projects\n    }\n}, { addTask } )(NewTaskForm)\n\n\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './TaskContainer.css'\nimport TopBar from '../components/TopBar'\nimport TaskCard from '../components/TaskCard'\nimport TaskWorkspace from '../components/TaskWorkspace'\nimport NewTaskForm from '../components/NewTaskForm'\nimport { setCurrentTask } from '../actions/task'\nimport { populateDetails } from '../actions/detail'\nimport { deleteProject } from '../actions/project'\nimport { currentProject, parseTimestamp, currentTeam } from '../helpers/helpers'\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\nimport ErrorField from '../components/ErrorField'\n\nfunction TaskContainer({ tasks, setCurrentTask, populateDetails, currentUser, deleteProject, loggedIn }) {\n\n    const [error, setError] = useState('')\n\n    return (\n        <div className='task-container'>\n            <TopBar />\n            <div className='task-fields'>\n                {currentProject()? \n                    <section className='tasks-select'>\n                        {currentUser.id === currentProject().creator_id || \n                        currentUser.id === currentTeam().leader_id ?\n                            <button \n                                type='button' \n                                className='delete-btn'\n                                onClick={() => {\n                                    deleteProject(currentProject().id, currentUser)\n                                    .catch(error => setError(error))\n                                }}\n                            >\n                                <DeleteOutline />\n                            </button>\n                        :\n                            null\n                        }\n                        <div className=\"title\">\n                            <h1>{currentProject().title}</h1>\n                            <h2>Deadline: {parseTimestamp(currentProject().deadline)}</h2>\n                        </div>\n                        {error ? \n                            <ErrorField \n                                error={error}\n                                timeout=\"5000\"\n                                clearError={() => setError('')}\n                            />\n                            :\n                            null\n                        }\n                        <h1>Project Goals:</h1>\n                        <NewTaskForm />\n                        {tasks.map(task => \n                            <TaskCard\n                                key={task.id}\n                                task={task}\n                                loadTask={(e) => {\n                                    setCurrentTask(e.target.id)\n                                    populateDetails(e.target.id)\n                                }}\n                            />\n                        )}\n                    </section>\n                    :\n                    null\n                }   \n                <TaskWorkspace />\n            </div>\n        </div>\n    )\n    \n}\n\n\nexport default connect((state) => {\n    return {\n        tasks: state.task.tasks,\n        projects: state.project.projects,\n        currentUser: state.auth.currentUser,\n        teams: state.team.teams,\n        loggedIn: state.auth.loggedIn\n    }\n}, { setCurrentTask, populateDetails, deleteProject })(TaskContainer)\n","import { baseUrl, handleResponse } from '../helpers/helpers'\nimport { getToken } from '../actions/auth'\n\nexport const populateProjects = (teamId) => {\n    return async (dispatch) => {\n        return await fetch(`${baseUrl}/projects?teamId=${teamId}`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': getToken()\n            }\n        })\n        .then((res) => {\n            return handleResponse(res, (projects) => {\n                projects.map(project => project['selected'] = false)\n                dispatch({ type: \"POPULATE_PROJECTS\", payload: projects})\n            })\n        })\n    }\n};\n\nexport const setCurrentProject = (projectId) => {\n    return (dispatch) => {\n        dispatch({ type: \"SET_CURRENT_PROJECT\", payload: projectId })\n        dispatch({ type: \"CLEAR_DETAILS\" })\n        dispatch({ type: \"CLEAR_TASKS\" })\n    }\n}\n\nexport const addProject = (projectName, currentTeam, currentUser, deadline) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/projects`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({project: {\n                title: projectName, \n                team_id: currentTeam.id, \n                creator_id: currentUser.id,\n                deadline: deadline\n            }}) \n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({ type: \"CLEAR_DETAILS\" })\n                dispatch({ type: \"CLEAR_TASKS\" })\n                dispatch({ type: \"ADD_PROJECT\", payload: json.project})\n                dispatch({ type: \"SET_CURRENT_PROJECT\", payload: json.project.id })\n            })\n        })\n    }\n}\n\nexport const deleteProject = (projectId, currentUser) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/projects/${projectId}`, {\n            method: \"DELETE\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': getToken()\n            },\n            body: JSON.stringify({project: {user_id: currentUser.id}})\n        })\n        .then(res => {\n            return handleResponse(res, () => {\n                dispatch({ type: \"CLEAR_DETAILS\" })\n                dispatch({ type: \"CLEAR_TASKS\" })\n                dispatch({ type: 'DELETE_PROJECT', payload: projectId })\n            }) \n        })\n    }\n}","import React, { useState } from 'react'\nimport \"./AddProjectForm.css\"\nimport { connect } from 'react-redux'\nimport { addProject } from '../actions/project' \nimport { currentTeam } from '../helpers/helpers'\n\nfunction AddProjectForm({ addProject, currentUser, showOverlay, setShowOverlay }) {\n    const [title, setTitle] = useState('')\n    const [deadline, setDeadline] = useState(Date.now())\n\n    return (\n        <div className={showOverlay ? \"add-project-form show\" : \"add-project-form hide\"}>\n            <form \n                action=\"\"\n                onSubmit={(e) => {\n                    e.preventDefault()\n                    addProject(title, currentTeam(), currentUser, deadline)\n                    setShowOverlay(false)\n                }}\n            >   \n                <label htmlFor=\"title\">Project Name:</label> \n                <br/>\n                <input \n                    type=\"text\" \n                    id=\"title\"\n                    value={title}\n                    onChange={e => setTitle(e.target.value)}\n                />\n                <br/>\n                <br/>\n                <label htmlFor=\"deadline\">Deadline:</label>\n                <br/>\n                <input \n                    type=\"datetime-local\" \n                    id=\"deadline\" \n                    value={deadline}\n                    onChange={e => setDeadline(e.target.value)}\n                />\n                <br/>\n                <br/>\n                <input type=\"submit\" value=\"Create Project\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n}, { addProject })(AddProjectForm)","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './ToolbarContainer.css'\nimport AddProjectForm from '../components/AddProjectForm'\nimport { setCurrentProject } from '../actions/project'\nimport { populateTasks } from '../actions/task'\nimport { currentTeam } from '../helpers/helpers'\n\nfunction ToolbarContainer({ projects, setCurrentProject, populateTasks }) {\n\n    const [showOverlay, setShowOverlay] = useState(false)\n\n    return (\n        <div className='toolbar-container'>\n            <div \n                className={showOverlay ? 'overlay show' : 'overlay hide'}\n                onClick={() => setShowOverlay(false)}\n            ></div>\n            <AddProjectForm \n                showOverlay={showOverlay} \n                setShowOverlay={setShowOverlay}/>\n            <h1>Team:</h1>\n            <h2>{currentTeam().name}</h2>\n            \n            <br/>\n            <Link to='/teams'>Manage Teams</Link>\n            <br/>\n            <hr/>\n            <h2>Projects:</h2>\n            <button \n                type='button' \n                className='addProjectBtn'\n                onClick={() => {\n                    setShowOverlay(true) \n                }}\n            >\n                Start New Project\n            </button>\n            <br/>\n            {projects.length > 0 ?\n                projects.map(project => \n                    <div \n                    key={project.id}\n                    className={project.selected ? \"project-card selected\" : \"project-card\"}\n                    onClick={() => {\n                        setCurrentProject(project.id)\n                        populateTasks(project.id)\n                    }}\n                    >\n                        {project.title}\n                    </div>\n                )\n            : null\n            } \n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        projects: state.project.projects\n    }\n}, { setCurrentProject, populateTasks })(ToolbarContainer)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport TaskContainer from '../../containers/TaskContainer'\nimport ToolbarContainer from '../../containers/ToolbarContainer'\nimport './Dashboard.css'\nimport { populateProjects }  from '../../actions/project'\nimport { populateTasks}  from '../../actions/task'\nimport { currentTeam } from '../../helpers/helpers'\n\nfunction Dashboard({ populateProjects }) {\n\n    useEffect(() => {\n        populateProjects(currentTeam().id)\n    }, [populateProjects])\n        \n    return (\n        <div className='dashboard'>\n            <TaskContainer />\n            <ToolbarContainer />\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        teams: state.team.teams,\n        projects: state.project.projects\n    }\n}, { populateTasks, populateProjects })(Dashboard)\n","import { baseUrl, handleResponse } from '../helpers/helpers'\n\nexport const populateTeams = (userId, preSelectId) => {\n    return async (dispatch) => {\n        return await fetch(`${baseUrl}/teams?userId=${userId}`)\n        .then((res) => {\n            return handleResponse(res, (teams) => {\n                dispatch({ type: \"POPULATE_TEAMS\", payload: teams })\n                dispatch({ type: \"SET_CURRENT_TEAM\", payload: preSelectId })\n            })\n        })\n    }\n}\n\nexport const setCurrentTeam = (teamId) => {\n    return (dispatch) => {\n        dispatch({type: \"CLEAR_PROJECTS\"})\n        dispatch({type: \"CLEAR_TASKS\"})\n        dispatch({type: \"CLEAR_DETAILS\"})\n        dispatch({type: \"SET_CURRENT_TEAM\", payload: Number(teamId)})\n    }\n}\n\nexport const addTeam = (teamName, currentUser) => {\n    return (dispatch) => {\n        return fetch(`${baseUrl}/teams`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                team: {\n                    name: teamName, \n                    user_id: currentUser.id\n                }\n            })\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                let team = json.team\n                team.members = []\n                team.leader = currentUser.username\n                dispatch({type: 'ADD_TEAM', payload: json.team})\n                return json\n            })\n        })\n    }\n}\n\nexport const addMember = (query, teamId) => {\n    return (dispatch) => {\n        fetch(`${baseUrl}/memberships`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'applicaiton/json',\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({membership: {query: query, team_id: teamId}})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({\n                    type: \"ADD_MEMBER\", \n                    payload: {member: json.member, teamId: teamId}\n                })\n            })\n        })\n    }\n}\n\nexport const removeMember = (memberId, teamId) => {\n    return (dispatch) => {\n        fetch(`${baseUrl}/memberships`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'applicaiton/json',\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({membership: {user_id: memberId, team_id: teamId}})\n        })\n        .then(res => {\n            return handleResponse(res, (json) => {\n                dispatch({\n                    type: \"REMOVE_MEMBER\", \n                    payload: {memberId: memberId, teamId: teamId}\n                })\n            })\n        })\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport './MemberCard.css'\nimport { removeMember } from '../actions/team'\n\nfunction MemberCard(props) {\n    let currentTeam = props.teams.find(team => team.selected === true) \n    return (\n        <fieldset className='member-card'>\n            <h2>{props.member.username}</h2>\n            &nbsp;-&nbsp; \n            <h3>{props.member.email}</h3>\n            {props.removable === 'true' ? \n                <button\n                    className='delete-member-button'\n                    type='button'\n                    onClick={(e) => {\n                        window.confirm(`Are You Sure You Want To Remove ${props.member.username} from the team?`) &&\n                        props.removeMember(props.member.id, currentTeam.id)\n                    }}\n                >\n                    X\n                </button>\n            :\n                null\n            }\n        </fieldset>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        teams: state.team.teams\n    }\n}, { removeMember })(MemberCard)\n","import React, { useState } from 'react'\nimport './AddMemberForm.css'\nimport { connect } from 'react-redux' \nimport { addMember } from '../actions/team'\n\nfunction AddMemberForm({ addMember, currentTeam }) {\n    \n    const [query, setQuery] = useState('')\n\n    return (\n        <div className=\"add-member-form\">\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault()\n                    addMember(query, currentTeam.id)\n                    setQuery('')\n                }}\n            >\n                <input \n                    type=\"text\"\n                    value={query}\n                    onChange={e => {\n                        setQuery(e.target.value)\n                    }}\n                />\n                <input type=\"submit\" value=\"Add Member\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default connect(null, { addMember })(AddMemberForm)","import React, { useState } from 'react'\nimport './ChangeTeamNameForm.css'\n\nexport default function ChangeTeamNameForm(props) {\n\n    const [teamName, setTeamName] = useState(props.currentTeam.name)\n\n    return (\n        <div className=\"change-team-name-form\">\n            <h2>Settings:</h2>\n            <h3>Update Team Name:</h3>\n            <form action=\"\">\n                <input \n                    type=\"text\"\n                    value={teamName}\n                    onChange={(e) => {\n                        setTeamName(e.target.value)\n                    }}\n                />\n                <input type=\"submit\" value=\"Update Name\"/>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './TeamPage.css'\nimport MemberCard from '../MemberCard'\nimport AddMemberForm from '../AddMemberForm'\nimport ChangeTeamNameForm from '../ChangeTeamNameForm'\n\nfunction TeamPage({ teams, currentUser }) {\n    let currentTeam = teams.find(team => team.selected === true)\n    return (\n        <div className='team-page'>\n            <section className=\"title\">\n                <h1>{currentTeam ? currentTeam.name : 'No Team Loaded'}</h1>\n                <Link to=\"/teams/select\">Select Team</Link>\n                <Link to=\"/dashboard\">Dashboard</Link>\n            </section>\n            <section className=\"team-options\">\n                <div className=\"members\">\n                    <h2>Leader:</h2>\n                    <MemberCard \n                        member={currentTeam.leader} \n                        removable='false' \n                    />\n                    <h2>Members:</h2>\n                    {currentTeam.members.map(member => \n                        <MemberCard \n                            member={member} \n                            removable={currentUser.id === currentTeam.leader.id ? \n                                'true' : 'false'} \n                        />\n                    )}\n                <AddMemberForm currentTeam={currentTeam} />\n                </div>\n                <div className=\"settings\">\n                    <ChangeTeamNameForm currentTeam={currentTeam}/>\n                </div>\n            </section>\n\n        </div>\n    )\n}\n\nexport default connect((state => {\n    return {\n        teams: state.team.teams,\n        currentUser: state.auth.currentUser\n    }\n}))(TeamPage)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport './NewTeamPage.css'\nimport { addTeam } from '../../actions/team'\nimport TopBar from '../TopBar'\n\nfunction NewTeamPage(props) {\n    const [teamName, setTeamName] = useState('')\n\n    return (\n        <div className='new-team-page'>\n            <TopBar />\n            <form \n            action=\"\"\n            onSubmit={e => {\n                e.preventDefault()\n                props.addTeam(teamName, props.currentUser)\n                .then(res => props.history.push('/dashboard'))\n            }}\n            >\n                <h1>Create a New Team:</h1>\n                <label htmlFor='team-name'>Team Name:</label>\n                <br/>\n                <input \n                    type='text' \n                    id='team-name'\n                    onChange={e => {setTeamName(e.target.value)}}\n                    value={teamName}\n                />\n                <input type=\"submit\" value='Create Team'/>\n            </form>\n        </div>\n    )\n}\n\nexport default connect((state) =>{\n    return {\n        currentUser: state.auth.currentUser\n    }\n}, { addTeam })(NewTeamPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom' \nimport './TeamCard.css'\nimport { setCurrentTeam } from '../actions/team'\n\nfunction TeamCard(props) {\n    \n    let history = useHistory()\n\n    return (\n        <fieldset \n            className='team-card'\n            onClick={() => {               \n                props.setCurrentTeam(props.team.id)\n                history.push('/dashboard')\n            }}\n        >\n            <h2>\n                {props.team.name}\n            </h2>\n        </fieldset>\n    )\n}\n\nexport default connect(null, { setCurrentTeam })(TeamCard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './TeamSelectPage.css'\nimport { populateTeams } from '../../actions/team'\nimport TeamCard from '../TeamCard'\nimport TopBar from '../TopBar'\n\nfunction TeamSelectPage({teams, populateTeams, currentUser }) {\n    // useEffect(() => {\n    //     populateTeams(currentUser.id || currentUser.data.id, \n    //     1)\n    // }, [populateTeams, currentUser])\n\n    return (\n        <div className='team-select'>\n            <TopBar />\n            {teams.length > 0 ?\n            <>\n                <div className=\"team-card-container\">\n                    <h2 className=\"title\">Click to load team Dashboard:</h2>\n                    {teams.map(team => <TeamCard key={team.id} team={team}/>)}\n                </div>\n                <Link to='./new'>Create A New Team</Link>\n            </>\n            :\n            <>\n                <h2>You don't have any teams yet!</h2>\n                <Link to='./new'>Create Your First Team</Link>\n            </>\n            }\n        </div>\n    )\n}\n\nexport default connect((state) => {\n    return {\n        teams: state.team.teams,\n        currentUser: state.auth.currentUser\n    }\n}, { populateTeams })(TeamSelectPage)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { signupUser } from \"../../actions/auth\"\nimport { populateTeams } from \"../../actions/team\"\nimport ErrorField from '../../components/ErrorField'\nimport './Signup.css'\n\nclass Signup extends React.Component {\n  state = {\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    error: '',\n    emailFocus: false,\n    usernameFocus: false,\n    passwordFocus: false,\n    passwordConfirmationFocus: false\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleFocus = (e) => {\n    this.setState({\n      [e.target.dataset.focus]: true\n    })\n  }\n  \n  handleBlur = (e) => {\n    if (e.target.value === '') {\n      this.setState({\n        [e.target.dataset.focus]: false\n      })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, username, password } = this.state;\n    this.props.signupUser({ email, username, password })\n    .then(() => {\n      this.props.redirect('/teams/new')\n    })\n    .catch(() => this.setState({ error: true }));\n  };\n\n  render() {\n    return (\n      <div className='signup-window'>\n        <form\n          onSubmit={this.handleSubmit}\n          className='signup-form'\n        >\n          <h1>Sign Up</h1>\n          {this.props.errors ?\n            <ErrorField \n              error={this.props.error}\n              clearError={() => this.setState({...this.state, error: ''})}\n            />\n          :\n            null\n          }\n            <label htmlFor='username' className={this.state.usernameFocus ? 'focus' : ''}>\n              Username\n            </label>\n            <input\n              type='text'\n              name='username'\n              id='username'\n              data-focus='usernameFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.username}\n            />\n            <br/>\n            <br/>\n            <label htmlFor='email' className={this.state.emailFocus ? 'focus' : ''}>\n              Email\n            </label>\n            <input\n              type='text'\n              name='email'\n              id='email'\n              data-focus='emailFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.email}\n            />\n            <br/>\n            <br/>\n            <label htmlFor='password' className={this.state.passwordFocus ? 'focus' : ''}>\n              Password\n            </label>\n            <input\n              type='password'\n              name='password'\n              id='password'\n              data-focus='passwordFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.password}\n            />\n            <br/>\n            <br/>\n            <label htmlFor='password-confirmation' className={this.state.passwordConfirmationFocus ? 'focus' : ''}>\n              Password Confirmation\n            </label>\n            <input\n              type='password'\n              name='passwordConfirmation'\n              id='password-confirmation'\n              data-focus='passwordConfirmationFocus'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.passwordConfirmation}\n            />\n            <br/>\n            <br/>\n          <input\n            type='submit'\n            value='Sign Up'\n          />\n        </form>\n        <button \n          type='button'\n          onClick={this.props.showLogin}\n        >\n          Existing User?\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => {\n  return {\n    auth: state.auth\n  }\n}, { signupUser, populateTeams })(Signup);","import React from \"react\";\nimport { ImSpinner3 } from \"react-icons/im\";\n\nconst LoadingSpinner = () => {\n  return (\n    <div className='fixed top-0 flex items-center w-screen h-screen z-20 bg-gray-700 bg-opacity-70'>\n      <div className='text-5xl text-white text-center w-10 mx-auto'>\n        <ImSpinner3 className='animate-spin' />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\"\nimport { checkAuth } from \"../../actions/auth\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nfunction withAuth(WrappedComponent) {\n  class Wrapper extends React.Component {\n    componentDidMount() {\n      this.props.dispatchCheckAuth();\n    }\n\n    render() {\n      if (!this.props.authChecked) {\n        return <LoadingSpinner />;\n      } else if (!this.props.loggedIn) {\n        return (\n          <>\n            <Redirect push to=\"/\" />\n          </>\n        );\n      } else {\n        return <WrappedComponent {...this.props} />;\n      }\n    }\n  }\n\n  const mapStateToProps = ({\n    auth: { authChecked, loggedIn, currentUser }\n  }) => {\n    return { authChecked, loggedIn, currentUser };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      dispatchCheckAuth: () => dispatch(checkAuth())\n    };\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n}\n\nexport default withAuth;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport { populateTeams } from \"../../actions/team\";\nimport LoadingSpinner from \"../LoadingSpinner\";\n\nfunction loadData(WrappedComponent) {\n  class Wrapper extends React.Component {\n    componentDidMount() {\n        if (!this.props.teamsPopulated) {\n            this.props.populateTeams(\n                this.props.currentUser.id || this.props.currentUser.data.id,\n                1\n            )\n        }\n    }\n\n    render() {\n        if (this.props.teamsPopulated) {\n            return this.props.teams.length > 0 ?\n                <WrappedComponent {...this.props} />\n            :\n                <Redirect to=\"/teams/new\" />\n        } else {\n            return <LoadingSpinner />;\n        }\n    }\n  }\n\n  return connect((state) => {\n      return {\n          currentUser: state.auth.currentUser,\n          teamsPopulated: state.team.populated,\n          teams: state.team.teams\n      }\n  }, { populateTeams })(Wrapper);\n}\n\nexport default loadData;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/auth\";\nimport { populateTeams } from \"../../actions/team\";\nimport './Login.css'\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: false,\n    emailFocus: false,\n    passwordFocus: false\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleFocus = (e) => {\n    e.target.name === 'email' ?\n    this.setState({\n      emailFocus: true\n    })\n    :\n    this.setState({\n      passwordFocus: true\n    })\n  }\n\n  handleBlur = (e) => {\n    if (e.target.name === 'email') {\n      if (this.state.email === '') {\n        this.setState({\n          emailFocus: false\n        })\n      }\n    } else {\n      if (this.state.password === '') {\n        this.setState({\n          passwordFocus: false\n        })\n      }\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    this.props.loginUser({ email, password })\n    .then(() => {\n      this.props.redirect('/teams/select')\n    })\n    .catch(() => this.setState({ error: true }));\n  };\n\n  render() {\n    return (\n      <div className='login-window'>\n        <form\n          onSubmit={this.handleSubmit}\n          className='login-form'\n        >\n          <h1>Log In</h1>\n          <p>{this.state.error && \"Invalid email or password\"}</p>\n            <label htmlFor='email' className={this.state.emailFocus ? 'focus' : ''}>\n              Email or Username\n            </label>\n            <input\n              type='text'\n              name='email'\n              id='email'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.email}\n            />\n            <br/>\n            <br/>\n            <label htmlFor='password' className={this.state.passwordFocus ? 'focus' : ''}>\n              Password\n            </label>\n            <input\n              type='password'\n              name='password'\n              id='password'\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              value={this.state.password}\n            />\n            <br/>\n            <br/>\n          <input\n            type='submit'\n            value='Log In'\n          />\n        </form>\n        <button \n          type='button'\n          onClick={this.props.showSignup}\n        >\n          New User?\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => {\n  return {\n    auth: state.auth\n  }\n}, { loginUser, populateTeams })(Login);","import React, { Component } from 'react'\nimport './Landing.css'\nimport Login from '../auth/Login'\nimport Signup from '../auth/Signup'\n\nexport default class Landing extends Component {\n    constructor() {\n        super()\n        this.state = {\n            login: true\n        }\n\n    }\n    redirect = (url) => {\n        this.props.history.push(url)\n    }\n\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"custom-shape-divider-top-1620756923\">\n                    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                        <path d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\" opacity=\".25\" className=\"shape-fill\"></path>\n                        <path d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\" opacity=\".5\" className=\"shape-fill\"></path>\n                        <path d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\" className=\"shape-fill\"></path>\n                    </svg>\n                </div>\n                <div className=\"landing-content\">\n                    <div className=\"splash\" alt='Splash'></div>\n                    {this.state.login ?\n                        <Login \n                            redirect={this.redirect} \n                            showSignup={() => this.setState({login: false})}\n                        />\n                    :\n                        <Signup \n                            redirect={this.redirect} \n                            showLogin={() => this.setState({login: true})}\n                        />\n                    }\n                    <div className=\"title\">\n                        <div className=\"logo\"></div>\n                        <span className=\"letters\">\n                            askaholik\n                        </span>\n                    </div>\n                    <div className=\"subtext\">\n                        <h2>Streamline your Team's Workflow</h2>\n                        <p>Communication is an integral part of any successful company.  <br/><br/>We help teams collaborate at the speed of thought. </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import './App.css';\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Dashboard from './components/pages/Dashboard'\nimport TeamPage from './components/pages/TeamPage'\nimport NewTeamPage from './components/pages/NewTeamPage'\nimport TeamSelectPage from './components/pages/TeamSelectPage'\nimport NewProjectPage from './components/pages/NewProjectPage'\nimport Signup from './components/auth/Signup'\nimport Logout from './components/auth/Logout'\nimport withAuth from './components/auth/withAuth'\nimport loadData from './components/auth/loadData'\nimport Landing from './components/pages/Landing'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/dashboard' component={withAuth(loadData(Dashboard))} />\n            <Route exact path='/teams' component={withAuth(loadData(TeamPage))} />\n            <Route exact path='/teams/new' component={withAuth(NewTeamPage)} />\n            <Route exact path='/teams/select' component={withAuth(loadData(TeamSelectPage))} />\n            <Route exact path='/projects/new' component={withAuth(loadData(NewProjectPage))} />\n            <Route exact path='/signup' component={Signup} />\n            <Route exact path='/logout' component={Logout} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}